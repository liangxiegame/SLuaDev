{
		"scope": "source.lua",
		"completions":
		[
			{ "trigger": "Slider:Rebuild(Public, Virtual, HideBySig, VtableLayoutMask)","contents": "Slider:Rebuild(Public, Virtual, HideBySig, VtableLayoutMask)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	UnityEngine.UI.CanvasUpdate a1;
	checkEnum(l,2,out a1);
	self.Rebuild(a1);
			{ "trigger": "Slider:LayoutComplete(Public, Virtual, HideBySig, VtableLayoutMask)","contents": "Slider:LayoutComplete(Public, Virtual, HideBySig, VtableLayoutMask)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	self.LayoutComplete();
			{ "trigger": "Slider:GraphicUpdateComplete(Public, Virtual, HideBySig, VtableLayoutMask)","contents": "Slider:GraphicUpdateComplete(Public, Virtual, HideBySig, VtableLayoutMask)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	self.GraphicUpdateComplete();
			{ "trigger": "Slider:OnPointerDown(Public, Virtual, HideBySig)","contents": "Slider:OnPointerDown(Public, Virtual, HideBySig)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	UnityEngine.EventSystems.PointerEventData a1;
	checkType(l,2,out a1);
	self.OnPointerDown(a1);
			{ "trigger": "Slider:OnDrag(Public, Virtual, HideBySig, VtableLayoutMask)","contents": "Slider:OnDrag(Public, Virtual, HideBySig, VtableLayoutMask)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	UnityEngine.EventSystems.PointerEventData a1;
	checkType(l,2,out a1);
	self.OnDrag(a1);
			{ "trigger": "Slider:OnMove(Public, Virtual, HideBySig)","contents": "Slider:OnMove(Public, Virtual, HideBySig)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	UnityEngine.EventSystems.AxisEventData a1;
	checkType(l,2,out a1);
	self.OnMove(a1);
			{ "trigger": "Slider:FindSelectableOnLeft(Public, Virtual, HideBySig)","contents": "Slider:FindSelectableOnLeft(Public, Virtual, HideBySig)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	var ret=self.FindSelectableOnLeft();
			{ "trigger": "Slider:FindSelectableOnRight(Public, Virtual, HideBySig)","contents": "Slider:FindSelectableOnRight(Public, Virtual, HideBySig)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	var ret=self.FindSelectableOnRight();
			{ "trigger": "Slider:FindSelectableOnUp(Public, Virtual, HideBySig)","contents": "Slider:FindSelectableOnUp(Public, Virtual, HideBySig)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	var ret=self.FindSelectableOnUp();
			{ "trigger": "Slider:FindSelectableOnDown(Public, Virtual, HideBySig)","contents": "Slider:FindSelectableOnDown(Public, Virtual, HideBySig)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	var ret=self.FindSelectableOnDown();
			{ "trigger": "Slider:OnInitializePotentialDrag(Public, Virtual, HideBySig, VtableLayoutMask)","contents": "Slider:OnInitializePotentialDrag(Public, Virtual, HideBySig, VtableLayoutMask)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	UnityEngine.EventSystems.PointerEventData a1;
	checkType(l,2,out a1);
	self.OnInitializePotentialDrag(a1);
			{ "trigger": "Slider:SetDirection(Public, HideBySig)","contents": "Slider:SetDirection(Public, HideBySig)"},

	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
	UnityEngine.UI.Slider.Direction a1;
	checkEnum(l,2,out a1);
	System.Boolean a2;
	checkType(l,3,out a2);
	self.SetDirection(a1,a2);
	get_fillRect(IntPtr l) {
		set_fillRect(IntPtr l) {
			UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
			UnityEngine.RectTransform v;
			checkType(l,2,out v);
			self.fillRect=v;
			get_handleRect(IntPtr l) {
				set_handleRect(IntPtr l) {
					UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
					UnityEngine.RectTransform v;
					checkType(l,2,out v);
					self.handleRect=v;
					get_direction(IntPtr l) {
						set_direction(IntPtr l) {
							UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
							UnityEngine.UI.Slider.Direction v;
							checkEnum(l,2,out v);
							self.direction=v;
							get_minValue(IntPtr l) {
								set_minValue(IntPtr l) {
									UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
									float v;
									checkType(l,2,out v);
									self.minValue=v;
									get_maxValue(IntPtr l) {
										set_maxValue(IntPtr l) {
											UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
											float v;
											checkType(l,2,out v);
											self.maxValue=v;
											get_wholeNumbers(IntPtr l) {
												set_wholeNumbers(IntPtr l) {
													UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
													bool v;
													checkType(l,2,out v);
													self.wholeNumbers=v;
													get_value(IntPtr l) {
														set_value(IntPtr l) {
															UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
															float v;
															checkType(l,2,out v);
															self.value=v;
															get_normalizedValue(IntPtr l) {
																set_normalizedValue(IntPtr l) {
																	UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
																	float v;
																	checkType(l,2,out v);
																	self.normalizedValue=v;
																	get_onValueChanged(IntPtr l) {
																		set_onValueChanged(IntPtr l) {
																			UnityEngine.UI.Slider self=(UnityEngine.UI.Slider)checkSelf(l);
																			UnityEngine.UI.Slider.SliderEvent v;
																			checkType(l,2,out v);
																			self.onValueChanged=v;
																				]
																		}

