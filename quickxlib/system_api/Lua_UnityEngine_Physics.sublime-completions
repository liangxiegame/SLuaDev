{
		"scope": "source.lua",
		"completions":
		[
			{ "trigger": "UnityEngine.Physics()()","contents": "UnityEngine.Physics()()"},

			{ "trigger": "Physics.Raycast(Public, Static, HideBySig)","contents": "Physics.Raycast(Public, Static, HideBySig)"},

	if(argc==1){
		UnityEngine.Ray a1;
		checkValueType(l,1,out a1);
		var ret=UnityEngine.Physics.Raycast(a1);
		else if(matchType(l,argc,1,UnityEngine.RayLuaOut)){
			UnityEngine.Ray a1;
			checkValueType(l,1,out a1);
			UnityEngine.RaycastHit a2;
			var ret=UnityEngine.Physics.Raycast(a1,out a2);
			else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3)){
				UnityEngine.Vector3 a1;
				checkType(l,1,out a1);
				UnityEngine.Vector3 a2;
				checkType(l,2,out a2);
				var ret=UnityEngine.Physics.Raycast(a1,a2);
				else if(matchType(l,argc,1,UnityEngine.Ray,float)){
					UnityEngine.Ray a1;
					checkValueType(l,1,out a1);
					System.Single a2;
					checkType(l,2,out a2);
					var ret=UnityEngine.Physics.Raycast(a1,a2);
					else if(matchType(l,argc,1,UnityEngine.Ray,float,int)){
						UnityEngine.Ray a1;
						checkValueType(l,1,out a1);
						System.Single a2;
						checkType(l,2,out a2);
						System.Int32 a3;
						checkType(l,3,out a3);
						var ret=UnityEngine.Physics.Raycast(a1,a2,a3);
						else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3LuaOut)){
							UnityEngine.Vector3 a1;
							checkType(l,1,out a1);
							UnityEngine.Vector3 a2;
							checkType(l,2,out a2);
							UnityEngine.RaycastHit a3;
							var ret=UnityEngine.Physics.Raycast(a1,a2,out a3);
							else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float)){
								UnityEngine.Vector3 a1;
								checkType(l,1,out a1);
								UnityEngine.Vector3 a2;
								checkType(l,2,out a2);
								System.Single a3;
								checkType(l,3,out a3);
								var ret=UnityEngine.Physics.Raycast(a1,a2,a3);
								else if(matchType(l,argc,1,UnityEngine.RayLuaOut,float)){
									UnityEngine.Ray a1;
									checkValueType(l,1,out a1);
									UnityEngine.RaycastHit a2;
									System.Single a3;
									checkType(l,3,out a3);
									var ret=UnityEngine.Physics.Raycast(a1,out a2,a3);
									else if(matchType(l,argc,1,UnityEngine.Ray,float,int,UnityEngine.QueryTriggerInteraction)){
										UnityEngine.Ray a1;
										checkValueType(l,1,out a1);
										System.Single a2;
										checkType(l,2,out a2);
										System.Int32 a3;
										checkType(l,3,out a3);
										UnityEngine.QueryTriggerInteraction a4;
										checkEnum(l,4,out a4);
										var ret=UnityEngine.Physics.Raycast(a1,a2,a3,a4);
										else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float,int)){
											UnityEngine.Vector3 a1;
											checkType(l,1,out a1);
											UnityEngine.Vector3 a2;
											checkType(l,2,out a2);
											System.Single a3;
											checkType(l,3,out a3);
											System.Int32 a4;
											checkType(l,4,out a4);
											var ret=UnityEngine.Physics.Raycast(a1,a2,a3,a4);
											else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3LuaOut,float)){
												UnityEngine.Vector3 a1;
												checkType(l,1,out a1);
												UnityEngine.Vector3 a2;
												checkType(l,2,out a2);
												UnityEngine.RaycastHit a3;
												System.Single a4;
												checkType(l,4,out a4);
												var ret=UnityEngine.Physics.Raycast(a1,a2,out a3,a4);
												else if(matchType(l,argc,1,UnityEngine.RayLuaOut,float,int)){
													UnityEngine.Ray a1;
													checkValueType(l,1,out a1);
													UnityEngine.RaycastHit a2;
													System.Single a3;
													checkType(l,3,out a3);
													System.Int32 a4;
													checkType(l,4,out a4);
													var ret=UnityEngine.Physics.Raycast(a1,out a2,a3,a4);
													else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float,int,UnityEngine.QueryTriggerInteraction)){
														UnityEngine.Vector3 a1;
														checkType(l,1,out a1);
														UnityEngine.Vector3 a2;
														checkType(l,2,out a2);
														System.Single a3;
														checkType(l,3,out a3);
														System.Int32 a4;
														checkType(l,4,out a4);
														UnityEngine.QueryTriggerInteraction a5;
														checkEnum(l,5,out a5);
														var ret=UnityEngine.Physics.Raycast(a1,a2,a3,a4,a5);
														else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3LuaOut,float,int)){
															UnityEngine.Vector3 a1;
															checkType(l,1,out a1);
															UnityEngine.Vector3 a2;
															checkType(l,2,out a2);
															UnityEngine.RaycastHit a3;
															System.Single a4;
															checkType(l,4,out a4);
															System.Int32 a5;
															checkType(l,5,out a5);
															var ret=UnityEngine.Physics.Raycast(a1,a2,out a3,a4,a5);
															else if(matchType(l,argc,1,UnityEngine.RayLuaOut,float,int,UnityEngine.QueryTriggerInteraction)){
																UnityEngine.Ray a1;
																checkValueType(l,1,out a1);
																UnityEngine.RaycastHit a2;
																System.Single a3;
																checkType(l,3,out a3);
																System.Int32 a4;
																checkType(l,4,out a4);
																UnityEngine.QueryTriggerInteraction a5;
																checkEnum(l,5,out a5);
																var ret=UnityEngine.Physics.Raycast(a1,out a2,a3,a4,a5);
																else if(argc==6){
																	UnityEngine.Vector3 a1;
																	checkType(l,1,out a1);
																	UnityEngine.Vector3 a2;
																	checkType(l,2,out a2);
																	UnityEngine.RaycastHit a3;
																	System.Single a4;
																	checkType(l,4,out a4);
																	System.Int32 a5;
																	checkType(l,5,out a5);
																	UnityEngine.QueryTriggerInteraction a6;
																	checkEnum(l,6,out a6);
																	var ret=UnityEngine.Physics.Raycast(a1,a2,out a3,a4,a5,a6);
																			{ "trigger": "Physics.RaycastAll(Public, Static, HideBySig)","contents": "Physics.RaycastAll(Public, Static, HideBySig)"},

																	if(argc==1){
																		UnityEngine.Ray a1;
																		checkValueType(l,1,out a1);
																		var ret=UnityEngine.Physics.RaycastAll(a1);
																		else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3)){
																			UnityEngine.Vector3 a1;
																			checkType(l,1,out a1);
																			UnityEngine.Vector3 a2;
																			checkType(l,2,out a2);
																			var ret=UnityEngine.Physics.RaycastAll(a1,a2);
																			else if(matchType(l,argc,1,UnityEngine.Ray,float)){
																				UnityEngine.Ray a1;
																				checkValueType(l,1,out a1);
																				System.Single a2;
																				checkType(l,2,out a2);
																				var ret=UnityEngine.Physics.RaycastAll(a1,a2);
																				else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float)){
																					UnityEngine.Vector3 a1;
																					checkType(l,1,out a1);
																					UnityEngine.Vector3 a2;
																					checkType(l,2,out a2);
																					System.Single a3;
																					checkType(l,3,out a3);
																					var ret=UnityEngine.Physics.RaycastAll(a1,a2,a3);
																					else if(matchType(l,argc,1,UnityEngine.Ray,float,int)){
																						UnityEngine.Ray a1;
																						checkValueType(l,1,out a1);
																						System.Single a2;
																						checkType(l,2,out a2);
																						System.Int32 a3;
																						checkType(l,3,out a3);
																						var ret=UnityEngine.Physics.RaycastAll(a1,a2,a3);
																						else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float,int)){
																							UnityEngine.Vector3 a1;
																							checkType(l,1,out a1);
																							UnityEngine.Vector3 a2;
																							checkType(l,2,out a2);
																							System.Single a3;
																							checkType(l,3,out a3);
																							System.Int32 a4;
																							checkType(l,4,out a4);
																							var ret=UnityEngine.Physics.RaycastAll(a1,a2,a3,a4);
																							else if(matchType(l,argc,1,UnityEngine.Ray,float,int,UnityEngine.QueryTriggerInteraction)){
																								UnityEngine.Ray a1;
																								checkValueType(l,1,out a1);
																								System.Single a2;
																								checkType(l,2,out a2);
																								System.Int32 a3;
																								checkType(l,3,out a3);
																								UnityEngine.QueryTriggerInteraction a4;
																								checkEnum(l,4,out a4);
																								var ret=UnityEngine.Physics.RaycastAll(a1,a2,a3,a4);
																								else if(argc==5){
																									UnityEngine.Vector3 a1;
																									checkType(l,1,out a1);
																									UnityEngine.Vector3 a2;
																									checkType(l,2,out a2);
																									System.Single a3;
																									checkType(l,3,out a3);
																									System.Int32 a4;
																									checkType(l,4,out a4);
																									UnityEngine.QueryTriggerInteraction a5;
																									checkEnum(l,5,out a5);
																									var ret=UnityEngine.Physics.RaycastAll(a1,a2,a3,a4,a5);
																											{ "trigger": "Physics.RaycastNonAlloc(Public, Static, HideBySig)","contents": "Physics.RaycastNonAlloc(Public, Static, HideBySig)"},

																									if(argc==2){
																										UnityEngine.Ray a1;
																										checkValueType(l,1,out a1);
																										UnityEngine.RaycastHit[] a2;
																										checkArray(l,2,out a2);
																										var ret=UnityEngine.Physics.RaycastNonAlloc(a1,a2);
																										else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.RaycastHit[])){
																											UnityEngine.Vector3 a1;
																											checkType(l,1,out a1);
																											UnityEngine.Vector3 a2;
																											checkType(l,2,out a2);
																											UnityEngine.RaycastHit[] a3;
																											checkArray(l,3,out a3);
																											var ret=UnityEngine.Physics.RaycastNonAlloc(a1,a2,a3);
																											else if(matchType(l,argc,1,UnityEngine.Ray,UnityEngine.RaycastHit[],float)){
																												UnityEngine.Ray a1;
																												checkValueType(l,1,out a1);
																												UnityEngine.RaycastHit[] a2;
																												checkArray(l,2,out a2);
																												System.Single a3;
																												checkType(l,3,out a3);
																												var ret=UnityEngine.Physics.RaycastNonAlloc(a1,a2,a3);
																												else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.RaycastHit[],float)){
																													UnityEngine.Vector3 a1;
																													checkType(l,1,out a1);
																													UnityEngine.Vector3 a2;
																													checkType(l,2,out a2);
																													UnityEngine.RaycastHit[] a3;
																													checkArray(l,3,out a3);
																													System.Single a4;
																													checkType(l,4,out a4);
																													var ret=UnityEngine.Physics.RaycastNonAlloc(a1,a2,a3,a4);
																													else if(matchType(l,argc,1,UnityEngine.Ray,UnityEngine.RaycastHit[],float,int)){
																														UnityEngine.Ray a1;
																														checkValueType(l,1,out a1);
																														UnityEngine.RaycastHit[] a2;
																														checkArray(l,2,out a2);
																														System.Single a3;
																														checkType(l,3,out a3);
																														System.Int32 a4;
																														checkType(l,4,out a4);
																														var ret=UnityEngine.Physics.RaycastNonAlloc(a1,a2,a3,a4);
																														else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.RaycastHit[],float,int)){
																															UnityEngine.Vector3 a1;
																															checkType(l,1,out a1);
																															UnityEngine.Vector3 a2;
																															checkType(l,2,out a2);
																															UnityEngine.RaycastHit[] a3;
																															checkArray(l,3,out a3);
																															System.Single a4;
																															checkType(l,4,out a4);
																															System.Int32 a5;
																															checkType(l,5,out a5);
																															var ret=UnityEngine.Physics.RaycastNonAlloc(a1,a2,a3,a4,a5);
																															else if(matchType(l,argc,1,UnityEngine.Ray,UnityEngine.RaycastHit[],float,int,UnityEngine.QueryTriggerInteraction)){
																																UnityEngine.Ray a1;
																																checkValueType(l,1,out a1);
																																UnityEngine.RaycastHit[] a2;
																																checkArray(l,2,out a2);
																																System.Single a3;
																																checkType(l,3,out a3);
																																System.Int32 a4;
																																checkType(l,4,out a4);
																																UnityEngine.QueryTriggerInteraction a5;
																																checkEnum(l,5,out a5);
																																var ret=UnityEngine.Physics.RaycastNonAlloc(a1,a2,a3,a4,a5);
																																else if(argc==6){
																																	UnityEngine.Vector3 a1;
																																	checkType(l,1,out a1);
																																	UnityEngine.Vector3 a2;
																																	checkType(l,2,out a2);
																																	UnityEngine.RaycastHit[] a3;
																																	checkArray(l,3,out a3);
																																	System.Single a4;
																																	checkType(l,4,out a4);
																																	System.Int32 a5;
																																	checkType(l,5,out a5);
																																	UnityEngine.QueryTriggerInteraction a6;
																																	checkEnum(l,6,out a6);
																																	var ret=UnityEngine.Physics.RaycastNonAlloc(a1,a2,a3,a4,a5,a6);
																																			{ "trigger": "Physics.Linecast(Public, Static, HideBySig)","contents": "Physics.Linecast(Public, Static, HideBySig)"},

																																	if(argc==2){
																																		UnityEngine.Vector3 a1;
																																		checkType(l,1,out a1);
																																		UnityEngine.Vector3 a2;
																																		checkType(l,2,out a2);
																																		var ret=UnityEngine.Physics.Linecast(a1,a2);
																																		else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3LuaOut)){
																																			UnityEngine.Vector3 a1;
																																			checkType(l,1,out a1);
																																			UnityEngine.Vector3 a2;
																																			checkType(l,2,out a2);
																																			UnityEngine.RaycastHit a3;
																																			var ret=UnityEngine.Physics.Linecast(a1,a2,out a3);
																																			else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,int)){
																																				UnityEngine.Vector3 a1;
																																				checkType(l,1,out a1);
																																				UnityEngine.Vector3 a2;
																																				checkType(l,2,out a2);
																																				System.Int32 a3;
																																				checkType(l,3,out a3);
																																				var ret=UnityEngine.Physics.Linecast(a1,a2,a3);
																																				else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3LuaOut,int)){
																																					UnityEngine.Vector3 a1;
																																					checkType(l,1,out a1);
																																					UnityEngine.Vector3 a2;
																																					checkType(l,2,out a2);
																																					UnityEngine.RaycastHit a3;
																																					System.Int32 a4;
																																					checkType(l,4,out a4);
																																					var ret=UnityEngine.Physics.Linecast(a1,a2,out a3,a4);
																																					else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,int,UnityEngine.QueryTriggerInteraction)){
																																						UnityEngine.Vector3 a1;
																																						checkType(l,1,out a1);
																																						UnityEngine.Vector3 a2;
																																						checkType(l,2,out a2);
																																						System.Int32 a3;
																																						checkType(l,3,out a3);
																																						UnityEngine.QueryTriggerInteraction a4;
																																						checkEnum(l,4,out a4);
																																						var ret=UnityEngine.Physics.Linecast(a1,a2,a3,a4);
																																						else if(argc==5){
																																							UnityEngine.Vector3 a1;
																																							checkType(l,1,out a1);
																																							UnityEngine.Vector3 a2;
																																							checkType(l,2,out a2);
																																							UnityEngine.RaycastHit a3;
																																							System.Int32 a4;
																																							checkType(l,4,out a4);
																																							UnityEngine.QueryTriggerInteraction a5;
																																							checkEnum(l,5,out a5);
																																							var ret=UnityEngine.Physics.Linecast(a1,a2,out a3,a4,a5);
																																									{ "trigger": "Physics.OverlapSphere(Public, Static, HideBySig)","contents": "Physics.OverlapSphere(Public, Static, HideBySig)"},

																																							if(argc==2){
																																								UnityEngine.Vector3 a1;
																																								checkType(l,1,out a1);
																																								System.Single a2;
																																								checkType(l,2,out a2);
																																								var ret=UnityEngine.Physics.OverlapSphere(a1,a2);
																																								else if(argc==3){
																																									UnityEngine.Vector3 a1;
																																									checkType(l,1,out a1);
																																									System.Single a2;
																																									checkType(l,2,out a2);
																																									System.Int32 a3;
																																									checkType(l,3,out a3);
																																									var ret=UnityEngine.Physics.OverlapSphere(a1,a2,a3);
																																									else if(argc==4){
																																										UnityEngine.Vector3 a1;
																																										checkType(l,1,out a1);
																																										System.Single a2;
																																										checkType(l,2,out a2);
																																										System.Int32 a3;
																																										checkType(l,3,out a3);
																																										UnityEngine.QueryTriggerInteraction a4;
																																										checkEnum(l,4,out a4);
																																										var ret=UnityEngine.Physics.OverlapSphere(a1,a2,a3,a4);
																																												{ "trigger": "Physics.OverlapSphereNonAlloc(Public, Static, HideBySig)","contents": "Physics.OverlapSphereNonAlloc(Public, Static, HideBySig)"},

																																										if(argc==3){
																																											UnityEngine.Vector3 a1;
																																											checkType(l,1,out a1);
																																											System.Single a2;
																																											checkType(l,2,out a2);
																																											UnityEngine.Collider[] a3;
																																											checkArray(l,3,out a3);
																																											var ret=UnityEngine.Physics.OverlapSphereNonAlloc(a1,a2,a3);
																																											else if(argc==4){
																																												UnityEngine.Vector3 a1;
																																												checkType(l,1,out a1);
																																												System.Single a2;
																																												checkType(l,2,out a2);
																																												UnityEngine.Collider[] a3;
																																												checkArray(l,3,out a3);
																																												System.Int32 a4;
																																												checkType(l,4,out a4);
																																												var ret=UnityEngine.Physics.OverlapSphereNonAlloc(a1,a2,a3,a4);
																																												else if(argc==5){
																																													UnityEngine.Vector3 a1;
																																													checkType(l,1,out a1);
																																													System.Single a2;
																																													checkType(l,2,out a2);
																																													UnityEngine.Collider[] a3;
																																													checkArray(l,3,out a3);
																																													System.Int32 a4;
																																													checkType(l,4,out a4);
																																													UnityEngine.QueryTriggerInteraction a5;
																																													checkEnum(l,5,out a5);
																																													var ret=UnityEngine.Physics.OverlapSphereNonAlloc(a1,a2,a3,a4,a5);
																																															{ "trigger": "Physics.OverlapCapsule(Public, Static, HideBySig)","contents": "Physics.OverlapCapsule(Public, Static, HideBySig)"},

																																													if(argc==3){
																																														UnityEngine.Vector3 a1;
																																														checkType(l,1,out a1);
																																														UnityEngine.Vector3 a2;
																																														checkType(l,2,out a2);
																																														System.Single a3;
																																														checkType(l,3,out a3);
																																														var ret=UnityEngine.Physics.OverlapCapsule(a1,a2,a3);
																																														else if(argc==4){
																																															UnityEngine.Vector3 a1;
																																															checkType(l,1,out a1);
																																															UnityEngine.Vector3 a2;
																																															checkType(l,2,out a2);
																																															System.Single a3;
																																															checkType(l,3,out a3);
																																															System.Int32 a4;
																																															checkType(l,4,out a4);
																																															var ret=UnityEngine.Physics.OverlapCapsule(a1,a2,a3,a4);
																																															else if(argc==5){
																																																UnityEngine.Vector3 a1;
																																																checkType(l,1,out a1);
																																																UnityEngine.Vector3 a2;
																																																checkType(l,2,out a2);
																																																System.Single a3;
																																																checkType(l,3,out a3);
																																																System.Int32 a4;
																																																checkType(l,4,out a4);
																																																UnityEngine.QueryTriggerInteraction a5;
																																																checkEnum(l,5,out a5);
																																																var ret=UnityEngine.Physics.OverlapCapsule(a1,a2,a3,a4,a5);
																																																		{ "trigger": "Physics.OverlapCapsuleNonAlloc(Public, Static, HideBySig)","contents": "Physics.OverlapCapsuleNonAlloc(Public, Static, HideBySig)"},

																																																if(argc==4){
																																																	UnityEngine.Vector3 a1;
																																																	checkType(l,1,out a1);
																																																	UnityEngine.Vector3 a2;
																																																	checkType(l,2,out a2);
																																																	System.Single a3;
																																																	checkType(l,3,out a3);
																																																	UnityEngine.Collider[] a4;
																																																	checkArray(l,4,out a4);
																																																	var ret=UnityEngine.Physics.OverlapCapsuleNonAlloc(a1,a2,a3,a4);
																																																	else if(argc==5){
																																																		UnityEngine.Vector3 a1;
																																																		checkType(l,1,out a1);
																																																		UnityEngine.Vector3 a2;
																																																		checkType(l,2,out a2);
																																																		System.Single a3;
																																																		checkType(l,3,out a3);
																																																		UnityEngine.Collider[] a4;
																																																		checkArray(l,4,out a4);
																																																		System.Int32 a5;
																																																		checkType(l,5,out a5);
																																																		var ret=UnityEngine.Physics.OverlapCapsuleNonAlloc(a1,a2,a3,a4,a5);
																																																		else if(argc==6){
																																																			UnityEngine.Vector3 a1;
																																																			checkType(l,1,out a1);
																																																			UnityEngine.Vector3 a2;
																																																			checkType(l,2,out a2);
																																																			System.Single a3;
																																																			checkType(l,3,out a3);
																																																			UnityEngine.Collider[] a4;
																																																			checkArray(l,4,out a4);
																																																			System.Int32 a5;
																																																			checkType(l,5,out a5);
																																																			UnityEngine.QueryTriggerInteraction a6;
																																																			checkEnum(l,6,out a6);
																																																			var ret=UnityEngine.Physics.OverlapCapsuleNonAlloc(a1,a2,a3,a4,a5,a6);
																																																					{ "trigger": "Physics.CapsuleCast(Public, Static, HideBySig)","contents": "Physics.CapsuleCast(Public, Static, HideBySig)"},

																																																			if(argc==4){
																																																				UnityEngine.Vector3 a1;
																																																				checkType(l,1,out a1);
																																																				UnityEngine.Vector3 a2;
																																																				checkType(l,2,out a2);
																																																				System.Single a3;
																																																				checkType(l,3,out a3);
																																																				UnityEngine.Vector3 a4;
																																																				checkType(l,4,out a4);
																																																				var ret=UnityEngine.Physics.CapsuleCast(a1,a2,a3,a4);
																																																				else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float,UnityEngine.Vector3LuaOut)){
																																																					UnityEngine.Vector3 a1;
																																																					checkType(l,1,out a1);
																																																					UnityEngine.Vector3 a2;
																																																					checkType(l,2,out a2);
																																																					System.Single a3;
																																																					checkType(l,3,out a3);
																																																					UnityEngine.Vector3 a4;
																																																					checkType(l,4,out a4);
																																																					UnityEngine.RaycastHit a5;
																																																					var ret=UnityEngine.Physics.CapsuleCast(a1,a2,a3,a4,out a5);
																																																					else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float,UnityEngine.Vector3,float)){
																																																						UnityEngine.Vector3 a1;
																																																						checkType(l,1,out a1);
																																																						UnityEngine.Vector3 a2;
																																																						checkType(l,2,out a2);
																																																						System.Single a3;
																																																						checkType(l,3,out a3);
																																																						UnityEngine.Vector3 a4;
																																																						checkType(l,4,out a4);
																																																						System.Single a5;
																																																						checkType(l,5,out a5);
																																																						var ret=UnityEngine.Physics.CapsuleCast(a1,a2,a3,a4,a5);
																																																						else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float,UnityEngine.Vector3LuaOut,float)){
																																																							UnityEngine.Vector3 a1;
																																																							checkType(l,1,out a1);
																																																							UnityEngine.Vector3 a2;
																																																							checkType(l,2,out a2);
																																																							System.Single a3;
																																																							checkType(l,3,out a3);
																																																							UnityEngine.Vector3 a4;
																																																							checkType(l,4,out a4);
																																																							UnityEngine.RaycastHit a5;
																																																							System.Single a6;
																																																							checkType(l,6,out a6);
																																																							var ret=UnityEngine.Physics.CapsuleCast(a1,a2,a3,a4,out a5,a6);
																																																							else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float,UnityEngine.Vector3,float,int)){
																																																								UnityEngine.Vector3 a1;
																																																								checkType(l,1,out a1);
																																																								UnityEngine.Vector3 a2;
																																																								checkType(l,2,out a2);
																																																								System.Single a3;
																																																								checkType(l,3,out a3);
																																																								UnityEngine.Vector3 a4;
																																																								checkType(l,4,out a4);
																																																								System.Single a5;
																																																								checkType(l,5,out a5);
																																																								System.Int32 a6;
																																																								checkType(l,6,out a6);
																																																								var ret=UnityEngine.Physics.CapsuleCast(a1,a2,a3,a4,a5,a6);
																																																								else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float,UnityEngine.Vector3,float,int,UnityEngine.QueryTriggerInteraction)){
																																																									UnityEngine.Vector3 a1;
																																																									checkType(l,1,out a1);
																																																									UnityEngine.Vector3 a2;
																																																									checkType(l,2,out a2);
																																																									System.Single a3;
																																																									checkType(l,3,out a3);
																																																									UnityEngine.Vector3 a4;
																																																									checkType(l,4,out a4);
																																																									System.Single a5;
																																																									checkType(l,5,out a5);
																																																									System.Int32 a6;
																																																									checkType(l,6,out a6);
																																																									UnityEngine.QueryTriggerInteraction a7;
																																																									checkEnum(l,7,out a7);
																																																									var ret=UnityEngine.Physics.CapsuleCast(a1,a2,a3,a4,a5,a6,a7);
																																																									else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,float,UnityEngine.Vector3LuaOut,float,int)){
																																																										UnityEngine.Vector3 a1;
																																																										checkType(l,1,out a1);
																																																										UnityEngine.Vector3 a2;
																																																										checkType(l,2,out a2);
																																																										System.Single a3;
																																																										checkType(l,3,out a3);
																																																										UnityEngine.Vector3 a4;
																																																										checkType(l,4,out a4);
																																																										UnityEngine.RaycastHit a5;
																																																										System.Single a6;
																																																										checkType(l,6,out a6);
																																																										System.Int32 a7;
																																																										checkType(l,7,out a7);
																																																										var ret=UnityEngine.Physics.CapsuleCast(a1,a2,a3,a4,out a5,a6,a7);
																																																										else if(argc==8){
																																																											UnityEngine.Vector3 a1;
																																																											checkType(l,1,out a1);
																																																											UnityEngine.Vector3 a2;
																																																											checkType(l,2,out a2);
																																																											System.Single a3;
																																																											checkType(l,3,out a3);
																																																											UnityEngine.Vector3 a4;
																																																											checkType(l,4,out a4);
																																																											UnityEngine.RaycastHit a5;
																																																											System.Single a6;
																																																											checkType(l,6,out a6);
																																																											System.Int32 a7;
																																																											checkType(l,7,out a7);
																																																											UnityEngine.QueryTriggerInteraction a8;
																																																											checkEnum(l,8,out a8);
																																																											var ret=UnityEngine.Physics.CapsuleCast(a1,a2,a3,a4,out a5,a6,a7,a8);
																																																													{ "trigger": "Physics.SphereCast(Public, Static, HideBySig)","contents": "Physics.SphereCast(Public, Static, HideBySig)"},

																																																											if(argc==2){
																																																												UnityEngine.Ray a1;
																																																												checkValueType(l,1,out a1);
																																																												System.Single a2;
																																																												checkType(l,2,out a2);
																																																												var ret=UnityEngine.Physics.SphereCast(a1,a2);
																																																												else if(matchType(l,argc,1,UnityEngine.Ray,float,float)){
																																																													UnityEngine.Ray a1;
																																																													checkValueType(l,1,out a1);
																																																													System.Single a2;
																																																													checkType(l,2,out a2);
																																																													System.Single a3;
																																																													checkType(l,3,out a3);
																																																													var ret=UnityEngine.Physics.SphereCast(a1,a2,a3);
																																																													else if(matchType(l,argc,1,UnityEngine.Ray,floatLuaOut)){
																																																														UnityEngine.Ray a1;
																																																														checkValueType(l,1,out a1);
																																																														System.Single a2;
																																																														checkType(l,2,out a2);
																																																														UnityEngine.RaycastHit a3;
																																																														var ret=UnityEngine.Physics.SphereCast(a1,a2,out a3);
																																																														else if(matchType(l,argc,1,UnityEngine.Vector3,float,UnityEngine.Vector3LuaOut)){
																																																															UnityEngine.Vector3 a1;
																																																															checkType(l,1,out a1);
																																																															System.Single a2;
																																																															checkType(l,2,out a2);
																																																															UnityEngine.Vector3 a3;
																																																															checkType(l,3,out a3);
																																																															UnityEngine.RaycastHit a4;
																																																															var ret=UnityEngine.Physics.SphereCast(a1,a2,a3,out a4);
																																																															else if(matchType(l,argc,1,UnityEngine.Ray,float,float,int)){
																																																																UnityEngine.Ray a1;
																																																																checkValueType(l,1,out a1);
																																																																System.Single a2;
																																																																checkType(l,2,out a2);
																																																																System.Single a3;
																																																																checkType(l,3,out a3);
																																																																System.Int32 a4;
																																																																checkType(l,4,out a4);
																																																																var ret=UnityEngine.Physics.SphereCast(a1,a2,a3,a4);
																																																																else if(matchType(l,argc,1,UnityEngine.Ray,floatLuaOut,float)){
																																																																	UnityEngine.Ray a1;
																																																																	checkValueType(l,1,out a1);
																																																																	System.Single a2;
																																																																	checkType(l,2,out a2);
																																																																	UnityEngine.RaycastHit a3;
																																																																	System.Single a4;
																																																																	checkType(l,4,out a4);
																																																																	var ret=UnityEngine.Physics.SphereCast(a1,a2,out a3,a4);
																																																																	else if(matchType(l,argc,1,UnityEngine.Ray,floatLuaOut,float,int)){
																																																																		UnityEngine.Ray a1;
																																																																		checkValueType(l,1,out a1);
																																																																		System.Single a2;
																																																																		checkType(l,2,out a2);
																																																																		UnityEngine.RaycastHit a3;
																																																																		System.Single a4;
																																																																		checkType(l,4,out a4);
																																																																		System.Int32 a5;
																																																																		checkType(l,5,out a5);
																																																																		var ret=UnityEngine.Physics.SphereCast(a1,a2,out a3,a4,a5);
																																																																		else if(matchType(l,argc,1,UnityEngine.Ray,float,float,int,UnityEngine.QueryTriggerInteraction)){
																																																																			UnityEngine.Ray a1;
																																																																			checkValueType(l,1,out a1);
																																																																			System.Single a2;
																																																																			checkType(l,2,out a2);
																																																																			System.Single a3;
																																																																			checkType(l,3,out a3);
																																																																			System.Int32 a4;
																																																																			checkType(l,4,out a4);
																																																																			UnityEngine.QueryTriggerInteraction a5;
																																																																			checkEnum(l,5,out a5);
																																																																			var ret=UnityEngine.Physics.SphereCast(a1,a2,a3,a4,a5);
																																																																			else if(matchType(l,argc,1,UnityEngine.Vector3,float,UnityEngine.Vector3LuaOut,float)){
																																																																				UnityEngine.Vector3 a1;
																																																																				checkType(l,1,out a1);
																																																																				System.Single a2;
																																																																				checkType(l,2,out a2);
																																																																				UnityEngine.Vector3 a3;
																																																																				checkType(l,3,out a3);
																																																																				UnityEngine.RaycastHit a4;
																																																																				System.Single a5;
																																																																				checkType(l,5,out a5);
																																																																				var ret=UnityEngine.Physics.SphereCast(a1,a2,a3,out a4,a5);
																																																																				else if(matchType(l,argc,1,UnityEngine.Vector3,float,UnityEngine.Vector3LuaOut,float,int)){
																																																																					UnityEngine.Vector3 a1;
																																																																					checkType(l,1,out a1);
																																																																					System.Single a2;
																																																																					checkType(l,2,out a2);
																																																																					UnityEngine.Vector3 a3;
																																																																					checkType(l,3,out a3);
																																																																					UnityEngine.RaycastHit a4;
																																																																					System.Single a5;
																																																																					checkType(l,5,out a5);
																																																																					System.Int32 a6;
																																																																					checkType(l,6,out a6);
																																																																					var ret=UnityEngine.Physics.SphereCast(a1,a2,a3,out a4,a5,a6);
																																																																					else if(matchType(l,argc,1,UnityEngine.Ray,floatLuaOut,float,int,UnityEngine.QueryTriggerInteraction)){
																																																																						UnityEngine.Ray a1;
																																																																						checkValueType(l,1,out a1);
																																																																						System.Single a2;
																																																																						checkType(l,2,out a2);
																																																																						UnityEngine.RaycastHit a3;
																																																																						System.Single a4;
																																																																						checkType(l,4,out a4);
																																																																						System.Int32 a5;
																																																																						checkType(l,5,out a5);
																																																																						UnityEngine.QueryTriggerInteraction a6;
																																																																						checkEnum(l,6,out a6);
																																																																						var ret=UnityEngine.Physics.SphereCast(a1,a2,out a3,a4,a5,a6);
																																																																						else if(argc==7){
																																																																							UnityEngine.Vector3 a1;
																																																																							checkType(l,1,out a1);
																																																																							System.Single a2;
																																																																							checkType(l,2,out a2);
																																																																							UnityEngine.Vector3 a3;
																																																																							checkType(l,3,out a3);
																																																																							UnityEngine.RaycastHit a4;
																																																																							System.Single a5;
																																																																							checkType(l,5,out a5);
																																																																							System.Int32 a6;
																																																																							checkType(l,6,out a6);
																																																																							UnityEngine.QueryTriggerInteraction a7;
																																																																							checkEnum(l,7,out a7);
																																																																							var ret=UnityEngine.Physics.SphereCast(a1,a2,a3,out a4,a5,a6,a7);
																																																																									{ "trigger": "Physics.CapsuleCastAll(Public, Static, HideBySig)","contents": "Physics.CapsuleCastAll(Public, Static, HideBySig)"},

																																																																							if(argc==4){
																																																																								UnityEngine.Vector3 a1;
																																																																								checkType(l,1,out a1);
																																																																								UnityEngine.Vector3 a2;
																																																																								checkType(l,2,out a2);
																																																																								System.Single a3;
																																																																								checkType(l,3,out a3);
																																																																								UnityEngine.Vector3 a4;
																																																																								checkType(l,4,out a4);
																																																																								var ret=UnityEngine.Physics.CapsuleCastAll(a1,a2,a3,a4);
																																																																								else if(argc==5){
																																																																									UnityEngine.Vector3 a1;
																																																																									checkType(l,1,out a1);
																																																																									UnityEngine.Vector3 a2;
																																																																									checkType(l,2,out a2);
																																																																									System.Single a3;
																																																																									checkType(l,3,out a3);
																																																																									UnityEngine.Vector3 a4;
																																																																									checkType(l,4,out a4);
																																																																									System.Single a5;
																																																																									checkType(l,5,out a5);
																																																																									var ret=UnityEngine.Physics.CapsuleCastAll(a1,a2,a3,a4,a5);
																																																																									else if(argc==6){
																																																																										UnityEngine.Vector3 a1;
																																																																										checkType(l,1,out a1);
																																																																										UnityEngine.Vector3 a2;
																																																																										checkType(l,2,out a2);
																																																																										System.Single a3;
																																																																										checkType(l,3,out a3);
																																																																										UnityEngine.Vector3 a4;
																																																																										checkType(l,4,out a4);
																																																																										System.Single a5;
																																																																										checkType(l,5,out a5);
																																																																										System.Int32 a6;
																																																																										checkType(l,6,out a6);
																																																																										var ret=UnityEngine.Physics.CapsuleCastAll(a1,a2,a3,a4,a5,a6);
																																																																										else if(argc==7){
																																																																											UnityEngine.Vector3 a1;
																																																																											checkType(l,1,out a1);
																																																																											UnityEngine.Vector3 a2;
																																																																											checkType(l,2,out a2);
																																																																											System.Single a3;
																																																																											checkType(l,3,out a3);
																																																																											UnityEngine.Vector3 a4;
																																																																											checkType(l,4,out a4);
																																																																											System.Single a5;
																																																																											checkType(l,5,out a5);
																																																																											System.Int32 a6;
																																																																											checkType(l,6,out a6);
																																																																											UnityEngine.QueryTriggerInteraction a7;
																																																																											checkEnum(l,7,out a7);
																																																																											var ret=UnityEngine.Physics.CapsuleCastAll(a1,a2,a3,a4,a5,a6,a7);
																																																																													{ "trigger": "Physics.CapsuleCastNonAlloc(Public, Static, HideBySig)","contents": "Physics.CapsuleCastNonAlloc(Public, Static, HideBySig)"},

																																																																											if(argc==5){
																																																																												UnityEngine.Vector3 a1;
																																																																												checkType(l,1,out a1);
																																																																												UnityEngine.Vector3 a2;
																																																																												checkType(l,2,out a2);
																																																																												System.Single a3;
																																																																												checkType(l,3,out a3);
																																																																												UnityEngine.Vector3 a4;
																																																																												checkType(l,4,out a4);
																																																																												UnityEngine.RaycastHit[] a5;
																																																																												checkArray(l,5,out a5);
																																																																												var ret=UnityEngine.Physics.CapsuleCastNonAlloc(a1,a2,a3,a4,a5);
																																																																												else if(argc==6){
																																																																													UnityEngine.Vector3 a1;
																																																																													checkType(l,1,out a1);
																																																																													UnityEngine.Vector3 a2;
																																																																													checkType(l,2,out a2);
																																																																													System.Single a3;
																																																																													checkType(l,3,out a3);
																																																																													UnityEngine.Vector3 a4;
																																																																													checkType(l,4,out a4);
																																																																													UnityEngine.RaycastHit[] a5;
																																																																													checkArray(l,5,out a5);
																																																																													System.Single a6;
																																																																													checkType(l,6,out a6);
																																																																													var ret=UnityEngine.Physics.CapsuleCastNonAlloc(a1,a2,a3,a4,a5,a6);
																																																																													else if(argc==7){
																																																																														UnityEngine.Vector3 a1;
																																																																														checkType(l,1,out a1);
																																																																														UnityEngine.Vector3 a2;
																																																																														checkType(l,2,out a2);
																																																																														System.Single a3;
																																																																														checkType(l,3,out a3);
																																																																														UnityEngine.Vector3 a4;
																																																																														checkType(l,4,out a4);
																																																																														UnityEngine.RaycastHit[] a5;
																																																																														checkArray(l,5,out a5);
																																																																														System.Single a6;
																																																																														checkType(l,6,out a6);
																																																																														System.Int32 a7;
																																																																														checkType(l,7,out a7);
																																																																														var ret=UnityEngine.Physics.CapsuleCastNonAlloc(a1,a2,a3,a4,a5,a6,a7);
																																																																														else if(argc==8){
																																																																															UnityEngine.Vector3 a1;
																																																																															checkType(l,1,out a1);
																																																																															UnityEngine.Vector3 a2;
																																																																															checkType(l,2,out a2);
																																																																															System.Single a3;
																																																																															checkType(l,3,out a3);
																																																																															UnityEngine.Vector3 a4;
																																																																															checkType(l,4,out a4);
																																																																															UnityEngine.RaycastHit[] a5;
																																																																															checkArray(l,5,out a5);
																																																																															System.Single a6;
																																																																															checkType(l,6,out a6);
																																																																															System.Int32 a7;
																																																																															checkType(l,7,out a7);
																																																																															UnityEngine.QueryTriggerInteraction a8;
																																																																															checkEnum(l,8,out a8);
																																																																															var ret=UnityEngine.Physics.CapsuleCastNonAlloc(a1,a2,a3,a4,a5,a6,a7,a8);
																																																																																	{ "trigger": "Physics.SphereCastAll(Public, Static, HideBySig)","contents": "Physics.SphereCastAll(Public, Static, HideBySig)"},

																																																																															if(argc==2){
																																																																																UnityEngine.Ray a1;
																																																																																checkValueType(l,1,out a1);
																																																																																System.Single a2;
																																																																																checkType(l,2,out a2);
																																																																																var ret=UnityEngine.Physics.SphereCastAll(a1,a2);
																																																																																else if(matchType(l,argc,1,UnityEngine.Ray,float,float)){
																																																																																	UnityEngine.Ray a1;
																																																																																	checkValueType(l,1,out a1);
																																																																																	System.Single a2;
																																																																																	checkType(l,2,out a2);
																																																																																	System.Single a3;
																																																																																	checkType(l,3,out a3);
																																																																																	var ret=UnityEngine.Physics.SphereCastAll(a1,a2,a3);
																																																																																	else if(matchType(l,argc,1,UnityEngine.Vector3,float,UnityEngine.Vector3)){
																																																																																		UnityEngine.Vector3 a1;
																																																																																		checkType(l,1,out a1);
																																																																																		System.Single a2;
																																																																																		checkType(l,2,out a2);
																																																																																		UnityEngine.Vector3 a3;
																																																																																		checkType(l,3,out a3);
																																																																																		var ret=UnityEngine.Physics.SphereCastAll(a1,a2,a3);
																																																																																		else if(matchType(l,argc,1,UnityEngine.Ray,float,float,int)){
																																																																																			UnityEngine.Ray a1;
																																																																																			checkValueType(l,1,out a1);
																																																																																			System.Single a2;
																																																																																			checkType(l,2,out a2);
																																																																																			System.Single a3;
																																																																																			checkType(l,3,out a3);
																																																																																			System.Int32 a4;
																																																																																			checkType(l,4,out a4);
																																																																																			var ret=UnityEngine.Physics.SphereCastAll(a1,a2,a3,a4);
																																																																																			else if(matchType(l,argc,1,UnityEngine.Vector3,float,UnityEngine.Vector3,float)){
																																																																																				UnityEngine.Vector3 a1;
																																																																																				checkType(l,1,out a1);
																																																																																				System.Single a2;
																																																																																				checkType(l,2,out a2);
																																																																																				UnityEngine.Vector3 a3;
																																																																																				checkType(l,3,out a3);
																																																																																				System.Single a4;
																																																																																				checkType(l,4,out a4);
																																																																																				var ret=UnityEngine.Physics.SphereCastAll(a1,a2,a3,a4);
																																																																																				else if(matchType(l,argc,1,UnityEngine.Vector3,float,UnityEngine.Vector3,float,int)){
																																																																																					UnityEngine.Vector3 a1;
																																																																																					checkType(l,1,out a1);
																																																																																					System.Single a2;
																																																																																					checkType(l,2,out a2);
																																																																																					UnityEngine.Vector3 a3;
																																																																																					checkType(l,3,out a3);
																																																																																					System.Single a4;
																																																																																					checkType(l,4,out a4);
																																																																																					System.Int32 a5;
																																																																																					checkType(l,5,out a5);
																																																																																					var ret=UnityEngine.Physics.SphereCastAll(a1,a2,a3,a4,a5);
																																																																																					else if(matchType(l,argc,1,UnityEngine.Ray,float,float,int,UnityEngine.QueryTriggerInteraction)){
																																																																																						UnityEngine.Ray a1;
																																																																																						checkValueType(l,1,out a1);
																																																																																						System.Single a2;
																																																																																						checkType(l,2,out a2);
																																																																																						System.Single a3;
																																																																																						checkType(l,3,out a3);
																																																																																						System.Int32 a4;
																																																																																						checkType(l,4,out a4);
																																																																																						UnityEngine.QueryTriggerInteraction a5;
																																																																																						checkEnum(l,5,out a5);
																																																																																						var ret=UnityEngine.Physics.SphereCastAll(a1,a2,a3,a4,a5);
																																																																																						else if(argc==6){
																																																																																							UnityEngine.Vector3 a1;
																																																																																							checkType(l,1,out a1);
																																																																																							System.Single a2;
																																																																																							checkType(l,2,out a2);
																																																																																							UnityEngine.Vector3 a3;
																																																																																							checkType(l,3,out a3);
																																																																																							System.Single a4;
																																																																																							checkType(l,4,out a4);
																																																																																							System.Int32 a5;
																																																																																							checkType(l,5,out a5);
																																																																																							UnityEngine.QueryTriggerInteraction a6;
																																																																																							checkEnum(l,6,out a6);
																																																																																							var ret=UnityEngine.Physics.SphereCastAll(a1,a2,a3,a4,a5,a6);
																																																																																									{ "trigger": "Physics.SphereCastNonAlloc(Public, Static, HideBySig)","contents": "Physics.SphereCastNonAlloc(Public, Static, HideBySig)"},

																																																																																							if(argc==3){
																																																																																								UnityEngine.Ray a1;
																																																																																								checkValueType(l,1,out a1);
																																																																																								System.Single a2;
																																																																																								checkType(l,2,out a2);
																																																																																								UnityEngine.RaycastHit[] a3;
																																																																																								checkArray(l,3,out a3);
																																																																																								var ret=UnityEngine.Physics.SphereCastNonAlloc(a1,a2,a3);
																																																																																								else if(matchType(l,argc,1,UnityEngine.Ray,float,UnityEngine.RaycastHit[],float)){
																																																																																									UnityEngine.Ray a1;
																																																																																									checkValueType(l,1,out a1);
																																																																																									System.Single a2;
																																																																																									checkType(l,2,out a2);
																																																																																									UnityEngine.RaycastHit[] a3;
																																																																																									checkArray(l,3,out a3);
																																																																																									System.Single a4;
																																																																																									checkType(l,4,out a4);
																																																																																									var ret=UnityEngine.Physics.SphereCastNonAlloc(a1,a2,a3,a4);
																																																																																									else if(matchType(l,argc,1,UnityEngine.Vector3,float,UnityEngine.Vector3,UnityEngine.RaycastHit[])){
																																																																																										UnityEngine.Vector3 a1;
																																																																																										checkType(l,1,out a1);
																																																																																										System.Single a2;
																																																																																										checkType(l,2,out a2);
																																																																																										UnityEngine.Vector3 a3;
																																																																																										checkType(l,3,out a3);
																																																																																										UnityEngine.RaycastHit[] a4;
																																																																																										checkArray(l,4,out a4);
																																																																																										var ret=UnityEngine.Physics.SphereCastNonAlloc(a1,a2,a3,a4);
																																																																																										else if(matchType(l,argc,1,UnityEngine.Ray,float,UnityEngine.RaycastHit[],float,int)){
																																																																																											UnityEngine.Ray a1;
																																																																																											checkValueType(l,1,out a1);
																																																																																											System.Single a2;
																																																																																											checkType(l,2,out a2);
																																																																																											UnityEngine.RaycastHit[] a3;
																																																																																											checkArray(l,3,out a3);
																																																																																											System.Single a4;
																																																																																											checkType(l,4,out a4);
																																																																																											System.Int32 a5;
																																																																																											checkType(l,5,out a5);
																																																																																											var ret=UnityEngine.Physics.SphereCastNonAlloc(a1,a2,a3,a4,a5);
																																																																																											else if(matchType(l,argc,1,UnityEngine.Vector3,float,UnityEngine.Vector3,UnityEngine.RaycastHit[],float)){
																																																																																												UnityEngine.Vector3 a1;
																																																																																												checkType(l,1,out a1);
																																																																																												System.Single a2;
																																																																																												checkType(l,2,out a2);
																																																																																												UnityEngine.Vector3 a3;
																																																																																												checkType(l,3,out a3);
																																																																																												UnityEngine.RaycastHit[] a4;
																																																																																												checkArray(l,4,out a4);
																																																																																												System.Single a5;
																																																																																												checkType(l,5,out a5);
																																																																																												var ret=UnityEngine.Physics.SphereCastNonAlloc(a1,a2,a3,a4,a5);
																																																																																												else if(matchType(l,argc,1,UnityEngine.Vector3,float,UnityEngine.Vector3,UnityEngine.RaycastHit[],float,int)){
																																																																																													UnityEngine.Vector3 a1;
																																																																																													checkType(l,1,out a1);
																																																																																													System.Single a2;
																																																																																													checkType(l,2,out a2);
																																																																																													UnityEngine.Vector3 a3;
																																																																																													checkType(l,3,out a3);
																																																																																													UnityEngine.RaycastHit[] a4;
																																																																																													checkArray(l,4,out a4);
																																																																																													System.Single a5;
																																																																																													checkType(l,5,out a5);
																																																																																													System.Int32 a6;
																																																																																													checkType(l,6,out a6);
																																																																																													var ret=UnityEngine.Physics.SphereCastNonAlloc(a1,a2,a3,a4,a5,a6);
																																																																																													else if(matchType(l,argc,1,UnityEngine.Ray,float,UnityEngine.RaycastHit[],float,int,UnityEngine.QueryTriggerInteraction)){
																																																																																														UnityEngine.Ray a1;
																																																																																														checkValueType(l,1,out a1);
																																																																																														System.Single a2;
																																																																																														checkType(l,2,out a2);
																																																																																														UnityEngine.RaycastHit[] a3;
																																																																																														checkArray(l,3,out a3);
																																																																																														System.Single a4;
																																																																																														checkType(l,4,out a4);
																																																																																														System.Int32 a5;
																																																																																														checkType(l,5,out a5);
																																																																																														UnityEngine.QueryTriggerInteraction a6;
																																																																																														checkEnum(l,6,out a6);
																																																																																														var ret=UnityEngine.Physics.SphereCastNonAlloc(a1,a2,a3,a4,a5,a6);
																																																																																														else if(argc==7){
																																																																																															UnityEngine.Vector3 a1;
																																																																																															checkType(l,1,out a1);
																																																																																															System.Single a2;
																																																																																															checkType(l,2,out a2);
																																																																																															UnityEngine.Vector3 a3;
																																																																																															checkType(l,3,out a3);
																																																																																															UnityEngine.RaycastHit[] a4;
																																																																																															checkArray(l,4,out a4);
																																																																																															System.Single a5;
																																																																																															checkType(l,5,out a5);
																																																																																															System.Int32 a6;
																																																																																															checkType(l,6,out a6);
																																																																																															UnityEngine.QueryTriggerInteraction a7;
																																																																																															checkEnum(l,7,out a7);
																																																																																															var ret=UnityEngine.Physics.SphereCastNonAlloc(a1,a2,a3,a4,a5,a6,a7);
																																																																																																	{ "trigger": "Physics.CheckSphere(Public, Static, HideBySig)","contents": "Physics.CheckSphere(Public, Static, HideBySig)"},

																																																																																															if(argc==2){
																																																																																																UnityEngine.Vector3 a1;
																																																																																																checkType(l,1,out a1);
																																																																																																System.Single a2;
																																																																																																checkType(l,2,out a2);
																																																																																																var ret=UnityEngine.Physics.CheckSphere(a1,a2);
																																																																																																else if(argc==3){
																																																																																																	UnityEngine.Vector3 a1;
																																																																																																	checkType(l,1,out a1);
																																																																																																	System.Single a2;
																																																																																																	checkType(l,2,out a2);
																																																																																																	System.Int32 a3;
																																																																																																	checkType(l,3,out a3);
																																																																																																	var ret=UnityEngine.Physics.CheckSphere(a1,a2,a3);
																																																																																																	else if(argc==4){
																																																																																																		UnityEngine.Vector3 a1;
																																																																																																		checkType(l,1,out a1);
																																																																																																		System.Single a2;
																																																																																																		checkType(l,2,out a2);
																																																																																																		System.Int32 a3;
																																																																																																		checkType(l,3,out a3);
																																																																																																		UnityEngine.QueryTriggerInteraction a4;
																																																																																																		checkEnum(l,4,out a4);
																																																																																																		var ret=UnityEngine.Physics.CheckSphere(a1,a2,a3,a4);
																																																																																																				{ "trigger": "Physics.CheckCapsule(Public, Static, HideBySig)","contents": "Physics.CheckCapsule(Public, Static, HideBySig)"},

																																																																																																		if(argc==3){
																																																																																																			UnityEngine.Vector3 a1;
																																																																																																			checkType(l,1,out a1);
																																																																																																			UnityEngine.Vector3 a2;
																																																																																																			checkType(l,2,out a2);
																																																																																																			System.Single a3;
																																																																																																			checkType(l,3,out a3);
																																																																																																			var ret=UnityEngine.Physics.CheckCapsule(a1,a2,a3);
																																																																																																			else if(argc==4){
																																																																																																				UnityEngine.Vector3 a1;
																																																																																																				checkType(l,1,out a1);
																																																																																																				UnityEngine.Vector3 a2;
																																																																																																				checkType(l,2,out a2);
																																																																																																				System.Single a3;
																																																																																																				checkType(l,3,out a3);
																																																																																																				System.Int32 a4;
																																																																																																				checkType(l,4,out a4);
																																																																																																				var ret=UnityEngine.Physics.CheckCapsule(a1,a2,a3,a4);
																																																																																																				else if(argc==5){
																																																																																																					UnityEngine.Vector3 a1;
																																																																																																					checkType(l,1,out a1);
																																																																																																					UnityEngine.Vector3 a2;
																																																																																																					checkType(l,2,out a2);
																																																																																																					System.Single a3;
																																																																																																					checkType(l,3,out a3);
																																																																																																					System.Int32 a4;
																																																																																																					checkType(l,4,out a4);
																																																																																																					UnityEngine.QueryTriggerInteraction a5;
																																																																																																					checkEnum(l,5,out a5);
																																																																																																					var ret=UnityEngine.Physics.CheckCapsule(a1,a2,a3,a4,a5);
																																																																																																							{ "trigger": "Physics.CheckBox(Public, Static, HideBySig)","contents": "Physics.CheckBox(Public, Static, HideBySig)"},

																																																																																																					if(argc==2){
																																																																																																						UnityEngine.Vector3 a1;
																																																																																																						checkType(l,1,out a1);
																																																																																																						UnityEngine.Vector3 a2;
																																																																																																						checkType(l,2,out a2);
																																																																																																						var ret=UnityEngine.Physics.CheckBox(a1,a2);
																																																																																																						else if(argc==3){
																																																																																																							UnityEngine.Vector3 a1;
																																																																																																							checkType(l,1,out a1);
																																																																																																							UnityEngine.Vector3 a2;
																																																																																																							checkType(l,2,out a2);
																																																																																																							UnityEngine.Quaternion a3;
																																																																																																							checkType(l,3,out a3);
																																																																																																							var ret=UnityEngine.Physics.CheckBox(a1,a2,a3);
																																																																																																							else if(argc==4){
																																																																																																								UnityEngine.Vector3 a1;
																																																																																																								checkType(l,1,out a1);
																																																																																																								UnityEngine.Vector3 a2;
																																																																																																								checkType(l,2,out a2);
																																																																																																								UnityEngine.Quaternion a3;
																																																																																																								checkType(l,3,out a3);
																																																																																																								System.Int32 a4;
																																																																																																								checkType(l,4,out a4);
																																																																																																								var ret=UnityEngine.Physics.CheckBox(a1,a2,a3,a4);
																																																																																																								else if(argc==5){
																																																																																																									UnityEngine.Vector3 a1;
																																																																																																									checkType(l,1,out a1);
																																																																																																									UnityEngine.Vector3 a2;
																																																																																																									checkType(l,2,out a2);
																																																																																																									UnityEngine.Quaternion a3;
																																																																																																									checkType(l,3,out a3);
																																																																																																									System.Int32 a4;
																																																																																																									checkType(l,4,out a4);
																																																																																																									UnityEngine.QueryTriggerInteraction a5;
																																																																																																									checkEnum(l,5,out a5);
																																																																																																									var ret=UnityEngine.Physics.CheckBox(a1,a2,a3,a4,a5);
																																																																																																											{ "trigger": "Physics.OverlapBox(Public, Static, HideBySig)","contents": "Physics.OverlapBox(Public, Static, HideBySig)"},

																																																																																																									if(argc==2){
																																																																																																										UnityEngine.Vector3 a1;
																																																																																																										checkType(l,1,out a1);
																																																																																																										UnityEngine.Vector3 a2;
																																																																																																										checkType(l,2,out a2);
																																																																																																										var ret=UnityEngine.Physics.OverlapBox(a1,a2);
																																																																																																										else if(argc==3){
																																																																																																											UnityEngine.Vector3 a1;
																																																																																																											checkType(l,1,out a1);
																																																																																																											UnityEngine.Vector3 a2;
																																																																																																											checkType(l,2,out a2);
																																																																																																											UnityEngine.Quaternion a3;
																																																																																																											checkType(l,3,out a3);
																																																																																																											var ret=UnityEngine.Physics.OverlapBox(a1,a2,a3);
																																																																																																											else if(argc==4){
																																																																																																												UnityEngine.Vector3 a1;
																																																																																																												checkType(l,1,out a1);
																																																																																																												UnityEngine.Vector3 a2;
																																																																																																												checkType(l,2,out a2);
																																																																																																												UnityEngine.Quaternion a3;
																																																																																																												checkType(l,3,out a3);
																																																																																																												System.Int32 a4;
																																																																																																												checkType(l,4,out a4);
																																																																																																												var ret=UnityEngine.Physics.OverlapBox(a1,a2,a3,a4);
																																																																																																												else if(argc==5){
																																																																																																													UnityEngine.Vector3 a1;
																																																																																																													checkType(l,1,out a1);
																																																																																																													UnityEngine.Vector3 a2;
																																																																																																													checkType(l,2,out a2);
																																																																																																													UnityEngine.Quaternion a3;
																																																																																																													checkType(l,3,out a3);
																																																																																																													System.Int32 a4;
																																																																																																													checkType(l,4,out a4);
																																																																																																													UnityEngine.QueryTriggerInteraction a5;
																																																																																																													checkEnum(l,5,out a5);
																																																																																																													var ret=UnityEngine.Physics.OverlapBox(a1,a2,a3,a4,a5);
																																																																																																															{ "trigger": "Physics.OverlapBoxNonAlloc(Public, Static, HideBySig)","contents": "Physics.OverlapBoxNonAlloc(Public, Static, HideBySig)"},

																																																																																																													if(argc==3){
																																																																																																														UnityEngine.Vector3 a1;
																																																																																																														checkType(l,1,out a1);
																																																																																																														UnityEngine.Vector3 a2;
																																																																																																														checkType(l,2,out a2);
																																																																																																														UnityEngine.Collider[] a3;
																																																																																																														checkArray(l,3,out a3);
																																																																																																														var ret=UnityEngine.Physics.OverlapBoxNonAlloc(a1,a2,a3);
																																																																																																														else if(argc==4){
																																																																																																															UnityEngine.Vector3 a1;
																																																																																																															checkType(l,1,out a1);
																																																																																																															UnityEngine.Vector3 a2;
																																																																																																															checkType(l,2,out a2);
																																																																																																															UnityEngine.Collider[] a3;
																																																																																																															checkArray(l,3,out a3);
																																																																																																															UnityEngine.Quaternion a4;
																																																																																																															checkType(l,4,out a4);
																																																																																																															var ret=UnityEngine.Physics.OverlapBoxNonAlloc(a1,a2,a3,a4);
																																																																																																															else if(argc==5){
																																																																																																																UnityEngine.Vector3 a1;
																																																																																																																checkType(l,1,out a1);
																																																																																																																UnityEngine.Vector3 a2;
																																																																																																																checkType(l,2,out a2);
																																																																																																																UnityEngine.Collider[] a3;
																																																																																																																checkArray(l,3,out a3);
																																																																																																																UnityEngine.Quaternion a4;
																																																																																																																checkType(l,4,out a4);
																																																																																																																System.Int32 a5;
																																																																																																																checkType(l,5,out a5);
																																																																																																																var ret=UnityEngine.Physics.OverlapBoxNonAlloc(a1,a2,a3,a4,a5);
																																																																																																																else if(argc==6){
																																																																																																																	UnityEngine.Vector3 a1;
																																																																																																																	checkType(l,1,out a1);
																																																																																																																	UnityEngine.Vector3 a2;
																																																																																																																	checkType(l,2,out a2);
																																																																																																																	UnityEngine.Collider[] a3;
																																																																																																																	checkArray(l,3,out a3);
																																																																																																																	UnityEngine.Quaternion a4;
																																																																																																																	checkType(l,4,out a4);
																																																																																																																	System.Int32 a5;
																																																																																																																	checkType(l,5,out a5);
																																																																																																																	UnityEngine.QueryTriggerInteraction a6;
																																																																																																																	checkEnum(l,6,out a6);
																																																																																																																	var ret=UnityEngine.Physics.OverlapBoxNonAlloc(a1,a2,a3,a4,a5,a6);
																																																																																																																			{ "trigger": "Physics.BoxCastAll(Public, Static, HideBySig)","contents": "Physics.BoxCastAll(Public, Static, HideBySig)"},

																																																																																																																	if(argc==3){
																																																																																																																		UnityEngine.Vector3 a1;
																																																																																																																		checkType(l,1,out a1);
																																																																																																																		UnityEngine.Vector3 a2;
																																																																																																																		checkType(l,2,out a2);
																																																																																																																		UnityEngine.Vector3 a3;
																																																																																																																		checkType(l,3,out a3);
																																																																																																																		var ret=UnityEngine.Physics.BoxCastAll(a1,a2,a3);
																																																																																																																		else if(argc==4){
																																																																																																																			UnityEngine.Vector3 a1;
																																																																																																																			checkType(l,1,out a1);
																																																																																																																			UnityEngine.Vector3 a2;
																																																																																																																			checkType(l,2,out a2);
																																																																																																																			UnityEngine.Vector3 a3;
																																																																																																																			checkType(l,3,out a3);
																																																																																																																			UnityEngine.Quaternion a4;
																																																																																																																			checkType(l,4,out a4);
																																																																																																																			var ret=UnityEngine.Physics.BoxCastAll(a1,a2,a3,a4);
																																																																																																																			else if(argc==5){
																																																																																																																				UnityEngine.Vector3 a1;
																																																																																																																				checkType(l,1,out a1);
																																																																																																																				UnityEngine.Vector3 a2;
																																																																																																																				checkType(l,2,out a2);
																																																																																																																				UnityEngine.Vector3 a3;
																																																																																																																				checkType(l,3,out a3);
																																																																																																																				UnityEngine.Quaternion a4;
																																																																																																																				checkType(l,4,out a4);
																																																																																																																				System.Single a5;
																																																																																																																				checkType(l,5,out a5);
																																																																																																																				var ret=UnityEngine.Physics.BoxCastAll(a1,a2,a3,a4,a5);
																																																																																																																				else if(argc==6){
																																																																																																																					UnityEngine.Vector3 a1;
																																																																																																																					checkType(l,1,out a1);
																																																																																																																					UnityEngine.Vector3 a2;
																																																																																																																					checkType(l,2,out a2);
																																																																																																																					UnityEngine.Vector3 a3;
																																																																																																																					checkType(l,3,out a3);
																																																																																																																					UnityEngine.Quaternion a4;
																																																																																																																					checkType(l,4,out a4);
																																																																																																																					System.Single a5;
																																																																																																																					checkType(l,5,out a5);
																																																																																																																					System.Int32 a6;
																																																																																																																					checkType(l,6,out a6);
																																																																																																																					var ret=UnityEngine.Physics.BoxCastAll(a1,a2,a3,a4,a5,a6);
																																																																																																																					else if(argc==7){
																																																																																																																						UnityEngine.Vector3 a1;
																																																																																																																						checkType(l,1,out a1);
																																																																																																																						UnityEngine.Vector3 a2;
																																																																																																																						checkType(l,2,out a2);
																																																																																																																						UnityEngine.Vector3 a3;
																																																																																																																						checkType(l,3,out a3);
																																																																																																																						UnityEngine.Quaternion a4;
																																																																																																																						checkType(l,4,out a4);
																																																																																																																						System.Single a5;
																																																																																																																						checkType(l,5,out a5);
																																																																																																																						System.Int32 a6;
																																																																																																																						checkType(l,6,out a6);
																																																																																																																						UnityEngine.QueryTriggerInteraction a7;
																																																																																																																						checkEnum(l,7,out a7);
																																																																																																																						var ret=UnityEngine.Physics.BoxCastAll(a1,a2,a3,a4,a5,a6,a7);
																																																																																																																								{ "trigger": "Physics.BoxCastNonAlloc(Public, Static, HideBySig)","contents": "Physics.BoxCastNonAlloc(Public, Static, HideBySig)"},

																																																																																																																						if(argc==4){
																																																																																																																							UnityEngine.Vector3 a1;
																																																																																																																							checkType(l,1,out a1);
																																																																																																																							UnityEngine.Vector3 a2;
																																																																																																																							checkType(l,2,out a2);
																																																																																																																							UnityEngine.Vector3 a3;
																																																																																																																							checkType(l,3,out a3);
																																																																																																																							UnityEngine.RaycastHit[] a4;
																																																																																																																							checkArray(l,4,out a4);
																																																																																																																							var ret=UnityEngine.Physics.BoxCastNonAlloc(a1,a2,a3,a4);
																																																																																																																							else if(argc==5){
																																																																																																																								UnityEngine.Vector3 a1;
																																																																																																																								checkType(l,1,out a1);
																																																																																																																								UnityEngine.Vector3 a2;
																																																																																																																								checkType(l,2,out a2);
																																																																																																																								UnityEngine.Vector3 a3;
																																																																																																																								checkType(l,3,out a3);
																																																																																																																								UnityEngine.RaycastHit[] a4;
																																																																																																																								checkArray(l,4,out a4);
																																																																																																																								UnityEngine.Quaternion a5;
																																																																																																																								checkType(l,5,out a5);
																																																																																																																								var ret=UnityEngine.Physics.BoxCastNonAlloc(a1,a2,a3,a4,a5);
																																																																																																																								else if(argc==6){
																																																																																																																									UnityEngine.Vector3 a1;
																																																																																																																									checkType(l,1,out a1);
																																																																																																																									UnityEngine.Vector3 a2;
																																																																																																																									checkType(l,2,out a2);
																																																																																																																									UnityEngine.Vector3 a3;
																																																																																																																									checkType(l,3,out a3);
																																																																																																																									UnityEngine.RaycastHit[] a4;
																																																																																																																									checkArray(l,4,out a4);
																																																																																																																									UnityEngine.Quaternion a5;
																																																																																																																									checkType(l,5,out a5);
																																																																																																																									System.Single a6;
																																																																																																																									checkType(l,6,out a6);
																																																																																																																									var ret=UnityEngine.Physics.BoxCastNonAlloc(a1,a2,a3,a4,a5,a6);
																																																																																																																									else if(argc==7){
																																																																																																																										UnityEngine.Vector3 a1;
																																																																																																																										checkType(l,1,out a1);
																																																																																																																										UnityEngine.Vector3 a2;
																																																																																																																										checkType(l,2,out a2);
																																																																																																																										UnityEngine.Vector3 a3;
																																																																																																																										checkType(l,3,out a3);
																																																																																																																										UnityEngine.RaycastHit[] a4;
																																																																																																																										checkArray(l,4,out a4);
																																																																																																																										UnityEngine.Quaternion a5;
																																																																																																																										checkType(l,5,out a5);
																																																																																																																										System.Single a6;
																																																																																																																										checkType(l,6,out a6);
																																																																																																																										System.Int32 a7;
																																																																																																																										checkType(l,7,out a7);
																																																																																																																										var ret=UnityEngine.Physics.BoxCastNonAlloc(a1,a2,a3,a4,a5,a6,a7);
																																																																																																																										else if(argc==8){
																																																																																																																											UnityEngine.Vector3 a1;
																																																																																																																											checkType(l,1,out a1);
																																																																																																																											UnityEngine.Vector3 a2;
																																																																																																																											checkType(l,2,out a2);
																																																																																																																											UnityEngine.Vector3 a3;
																																																																																																																											checkType(l,3,out a3);
																																																																																																																											UnityEngine.RaycastHit[] a4;
																																																																																																																											checkArray(l,4,out a4);
																																																																																																																											UnityEngine.Quaternion a5;
																																																																																																																											checkType(l,5,out a5);
																																																																																																																											System.Single a6;
																																																																																																																											checkType(l,6,out a6);
																																																																																																																											System.Int32 a7;
																																																																																																																											checkType(l,7,out a7);
																																																																																																																											UnityEngine.QueryTriggerInteraction a8;
																																																																																																																											checkEnum(l,8,out a8);
																																																																																																																											var ret=UnityEngine.Physics.BoxCastNonAlloc(a1,a2,a3,a4,a5,a6,a7,a8);
																																																																																																																													{ "trigger": "Physics.BoxCast(Public, Static, HideBySig)","contents": "Physics.BoxCast(Public, Static, HideBySig)"},

																																																																																																																											if(argc==3){
																																																																																																																												UnityEngine.Vector3 a1;
																																																																																																																												checkType(l,1,out a1);
																																																																																																																												UnityEngine.Vector3 a2;
																																																																																																																												checkType(l,2,out a2);
																																																																																																																												UnityEngine.Vector3 a3;
																																																																																																																												checkType(l,3,out a3);
																																																																																																																												var ret=UnityEngine.Physics.BoxCast(a1,a2,a3);
																																																																																																																												else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3LuaOut)){
																																																																																																																													UnityEngine.Vector3 a1;
																																																																																																																													checkType(l,1,out a1);
																																																																																																																													UnityEngine.Vector3 a2;
																																																																																																																													checkType(l,2,out a2);
																																																																																																																													UnityEngine.Vector3 a3;
																																																																																																																													checkType(l,3,out a3);
																																																																																																																													UnityEngine.RaycastHit a4;
																																																																																																																													var ret=UnityEngine.Physics.BoxCast(a1,a2,a3,out a4);
																																																																																																																													else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion)){
																																																																																																																														UnityEngine.Vector3 a1;
																																																																																																																														checkType(l,1,out a1);
																																																																																																																														UnityEngine.Vector3 a2;
																																																																																																																														checkType(l,2,out a2);
																																																																																																																														UnityEngine.Vector3 a3;
																																																																																																																														checkType(l,3,out a3);
																																																																																																																														UnityEngine.Quaternion a4;
																																																																																																																														checkType(l,4,out a4);
																																																																																																																														var ret=UnityEngine.Physics.BoxCast(a1,a2,a3,a4);
																																																																																																																														else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,float)){
																																																																																																																															UnityEngine.Vector3 a1;
																																																																																																																															checkType(l,1,out a1);
																																																																																																																															UnityEngine.Vector3 a2;
																																																																																																																															checkType(l,2,out a2);
																																																																																																																															UnityEngine.Vector3 a3;
																																																																																																																															checkType(l,3,out a3);
																																																																																																																															UnityEngine.Quaternion a4;
																																																																																																																															checkType(l,4,out a4);
																																																																																																																															System.Single a5;
																																																																																																																															checkType(l,5,out a5);
																																																																																																																															var ret=UnityEngine.Physics.BoxCast(a1,a2,a3,a4,a5);
																																																																																																																															else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3LuaOut,UnityEngine.Quaternion)){
																																																																																																																																UnityEngine.Vector3 a1;
																																																																																																																																checkType(l,1,out a1);
																																																																																																																																UnityEngine.Vector3 a2;
																																																																																																																																checkType(l,2,out a2);
																																																																																																																																UnityEngine.Vector3 a3;
																																																																																																																																checkType(l,3,out a3);
																																																																																																																																UnityEngine.RaycastHit a4;
																																																																																																																																UnityEngine.Quaternion a5;
																																																																																																																																checkType(l,5,out a5);
																																																																																																																																var ret=UnityEngine.Physics.BoxCast(a1,a2,a3,out a4,a5);
																																																																																																																																else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3LuaOut,UnityEngine.Quaternion,float)){
																																																																																																																																	UnityEngine.Vector3 a1;
																																																																																																																																	checkType(l,1,out a1);
																																																																																																																																	UnityEngine.Vector3 a2;
																																																																																																																																	checkType(l,2,out a2);
																																																																																																																																	UnityEngine.Vector3 a3;
																																																																																																																																	checkType(l,3,out a3);
																																																																																																																																	UnityEngine.RaycastHit a4;
																																																																																																																																	UnityEngine.Quaternion a5;
																																																																																																																																	checkType(l,5,out a5);
																																																																																																																																	System.Single a6;
																																																																																																																																	checkType(l,6,out a6);
																																																																																																																																	var ret=UnityEngine.Physics.BoxCast(a1,a2,a3,out a4,a5,a6);
																																																																																																																																	else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,float,int)){
																																																																																																																																		UnityEngine.Vector3 a1;
																																																																																																																																		checkType(l,1,out a1);
																																																																																																																																		UnityEngine.Vector3 a2;
																																																																																																																																		checkType(l,2,out a2);
																																																																																																																																		UnityEngine.Vector3 a3;
																																																																																																																																		checkType(l,3,out a3);
																																																																																																																																		UnityEngine.Quaternion a4;
																																																																																																																																		checkType(l,4,out a4);
																																																																																																																																		System.Single a5;
																																																																																																																																		checkType(l,5,out a5);
																																																																																																																																		System.Int32 a6;
																																																																																																																																		checkType(l,6,out a6);
																																																																																																																																		var ret=UnityEngine.Physics.BoxCast(a1,a2,a3,a4,a5,a6);
																																																																																																																																		else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,float,int,UnityEngine.QueryTriggerInteraction)){
																																																																																																																																			UnityEngine.Vector3 a1;
																																																																																																																																			checkType(l,1,out a1);
																																																																																																																																			UnityEngine.Vector3 a2;
																																																																																																																																			checkType(l,2,out a2);
																																																																																																																																			UnityEngine.Vector3 a3;
																																																																																																																																			checkType(l,3,out a3);
																																																																																																																																			UnityEngine.Quaternion a4;
																																																																																																																																			checkType(l,4,out a4);
																																																																																																																																			System.Single a5;
																																																																																																																																			checkType(l,5,out a5);
																																																																																																																																			System.Int32 a6;
																																																																																																																																			checkType(l,6,out a6);
																																																																																																																																			UnityEngine.QueryTriggerInteraction a7;
																																																																																																																																			checkEnum(l,7,out a7);
																																																																																																																																			var ret=UnityEngine.Physics.BoxCast(a1,a2,a3,a4,a5,a6,a7);
																																																																																																																																			else if(matchType(l,argc,1,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3LuaOut,UnityEngine.Quaternion,float,int)){
																																																																																																																																				UnityEngine.Vector3 a1;
																																																																																																																																				checkType(l,1,out a1);
																																																																																																																																				UnityEngine.Vector3 a2;
																																																																																																																																				checkType(l,2,out a2);
																																																																																																																																				UnityEngine.Vector3 a3;
																																																																																																																																				checkType(l,3,out a3);
																																																																																																																																				UnityEngine.RaycastHit a4;
																																																																																																																																				UnityEngine.Quaternion a5;
																																																																																																																																				checkType(l,5,out a5);
																																																																																																																																				System.Single a6;
																																																																																																																																				checkType(l,6,out a6);
																																																																																																																																				System.Int32 a7;
																																																																																																																																				checkType(l,7,out a7);
																																																																																																																																				var ret=UnityEngine.Physics.BoxCast(a1,a2,a3,out a4,a5,a6,a7);
																																																																																																																																				else if(argc==8){
																																																																																																																																					UnityEngine.Vector3 a1;
																																																																																																																																					checkType(l,1,out a1);
																																																																																																																																					UnityEngine.Vector3 a2;
																																																																																																																																					checkType(l,2,out a2);
																																																																																																																																					UnityEngine.Vector3 a3;
																																																																																																																																					checkType(l,3,out a3);
																																																																																																																																					UnityEngine.RaycastHit a4;
																																																																																																																																					UnityEngine.Quaternion a5;
																																																																																																																																					checkType(l,5,out a5);
																																																																																																																																					System.Single a6;
																																																																																																																																					checkType(l,6,out a6);
																																																																																																																																					System.Int32 a7;
																																																																																																																																					checkType(l,7,out a7);
																																																																																																																																					UnityEngine.QueryTriggerInteraction a8;
																																																																																																																																					checkEnum(l,8,out a8);
																																																																																																																																					var ret=UnityEngine.Physics.BoxCast(a1,a2,a3,out a4,a5,a6,a7,a8);
																																																																																																																																							{ "trigger": "Physics.IgnoreCollision(Public, Static, HideBySig)","contents": "Physics.IgnoreCollision(Public, Static, HideBySig)"},

																																																																																																																																					if(argc==2){
																																																																																																																																						UnityEngine.Collider a1;
																																																																																																																																						checkType(l,1,out a1);
																																																																																																																																						UnityEngine.Collider a2;
																																																																																																																																						checkType(l,2,out a2);
																																																																																																																																						UnityEngine.Physics.IgnoreCollision(a1,a2);
																																																																																																																																						else if(argc==3){
																																																																																																																																							UnityEngine.Collider a1;
																																																																																																																																							checkType(l,1,out a1);
																																																																																																																																							UnityEngine.Collider a2;
																																																																																																																																							checkType(l,2,out a2);
																																																																																																																																							System.Boolean a3;
																																																																																																																																							checkType(l,3,out a3);
																																																																																																																																							UnityEngine.Physics.IgnoreCollision(a1,a2,a3);
																																																																																																																																									{ "trigger": "Physics.IgnoreLayerCollision(Public, Static, HideBySig)","contents": "Physics.IgnoreLayerCollision(Public, Static, HideBySig)"},

																																																																																																																																							if(argc==2){
																																																																																																																																								System.Int32 a1;
																																																																																																																																								checkType(l,1,out a1);
																																																																																																																																								System.Int32 a2;
																																																																																																																																								checkType(l,2,out a2);
																																																																																																																																								UnityEngine.Physics.IgnoreLayerCollision(a1,a2);
																																																																																																																																								else if(argc==3){
																																																																																																																																									System.Int32 a1;
																																																																																																																																									checkType(l,1,out a1);
																																																																																																																																									System.Int32 a2;
																																																																																																																																									checkType(l,2,out a2);
																																																																																																																																									System.Boolean a3;
																																																																																																																																									checkType(l,3,out a3);
																																																																																																																																									UnityEngine.Physics.IgnoreLayerCollision(a1,a2,a3);
																																																																																																																																											{ "trigger": "Physics.GetIgnoreLayerCollision(Public, Static, HideBySig)","contents": "Physics.GetIgnoreLayerCollision(Public, Static, HideBySig)"},

																																																																																																																																									System.Int32 a1;
																																																																																																																																									checkType(l,1,out a1);
																																																																																																																																									System.Int32 a2;
																																																																																																																																									checkType(l,2,out a2);
																																																																																																																																									var ret=UnityEngine.Physics.GetIgnoreLayerCollision(a1,a2);
																																																																																																																																									IgnoreRaycastLayer
																																																																																																																																									DefaultRaycastLayers
																																																																																																																																									AllLayers
																																																																																																																																									get_gravity(IntPtr l) {
																																																																																																																																										set_gravity(IntPtr l) {
																																																																																																																																											UnityEngine.Vector3 v;
																																																																																																																																											checkType(l,2,out v);
																																																																																																																																											UnityEngine.Physics.gravity=v;
																																																																																																																																											get_defaultContactOffset(IntPtr l) {
																																																																																																																																												set_defaultContactOffset(IntPtr l) {
																																																																																																																																													float v;
																																																																																																																																													checkType(l,2,out v);
																																																																																																																																													UnityEngine.Physics.defaultContactOffset=v;
																																																																																																																																													get_bounceThreshold(IntPtr l) {
																																																																																																																																														set_bounceThreshold(IntPtr l) {
																																																																																																																																															float v;
																																																																																																																																															checkType(l,2,out v);
																																																																																																																																															UnityEngine.Physics.bounceThreshold=v;
																																																																																																																																															get_defaultSolverIterations(IntPtr l) {
																																																																																																																																																set_defaultSolverIterations(IntPtr l) {
																																																																																																																																																	int v;
																																																																																																																																																	checkType(l,2,out v);
																																																																																																																																																	UnityEngine.Physics.defaultSolverIterations=v;
																																																																																																																																																	get_defaultSolverVelocityIterations(IntPtr l) {
																																																																																																																																																		set_defaultSolverVelocityIterations(IntPtr l) {
																																																																																																																																																			int v;
																																																																																																																																																			checkType(l,2,out v);
																																																																																																																																																			UnityEngine.Physics.defaultSolverVelocityIterations=v;
																																																																																																																																																			get_sleepThreshold(IntPtr l) {
																																																																																																																																																				set_sleepThreshold(IntPtr l) {
																																																																																																																																																					float v;
																																																																																																																																																					checkType(l,2,out v);
																																																																																																																																																					UnityEngine.Physics.sleepThreshold=v;
																																																																																																																																																					get_queriesHitTriggers(IntPtr l) {
																																																																																																																																																						set_queriesHitTriggers(IntPtr l) {
																																																																																																																																																							bool v;
																																																																																																																																																							checkType(l,2,out v);
																																																																																																																																																							UnityEngine.Physics.queriesHitTriggers=v;
																																																																																																																																																								]
																																																																																																																																																						}

