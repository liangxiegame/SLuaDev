{
		"scope": "source.lua",
		"completions":
		[
			{ "trigger": "RectTransformUtility.RectangleContainsScreenPoint(Public, Static, HideBySig)","contents": "RectTransformUtility.RectangleContainsScreenPoint(Public, Static, HideBySig)"},

	if(argc==2){
		UnityEngine.RectTransform a1;
		checkType(l,1,out a1);
		UnityEngine.Vector2 a2;
		checkType(l,2,out a2);
		var ret=UnityEngine.RectTransformUtility.RectangleContainsScreenPoint(a1,a2);
		else if(argc==3){
			UnityEngine.RectTransform a1;
			checkType(l,1,out a1);
			UnityEngine.Vector2 a2;
			checkType(l,2,out a2);
			UnityEngine.Camera a3;
			checkType(l,3,out a3);
			var ret=UnityEngine.RectTransformUtility.RectangleContainsScreenPoint(a1,a2,a3);
					{ "trigger": "RectTransformUtility.PixelAdjustPoint(Public, Static, HideBySig)","contents": "RectTransformUtility.PixelAdjustPoint(Public, Static, HideBySig)"},

			UnityEngine.Vector2 a1;
			checkType(l,1,out a1);
			UnityEngine.Transform a2;
			checkType(l,2,out a2);
			UnityEngine.Canvas a3;
			checkType(l,3,out a3);
			var ret=UnityEngine.RectTransformUtility.PixelAdjustPoint(a1,a2,a3);
					{ "trigger": "RectTransformUtility.PixelAdjustRect(Public, Static, HideBySig)","contents": "RectTransformUtility.PixelAdjustRect(Public, Static, HideBySig)"},

			UnityEngine.RectTransform a1;
			checkType(l,1,out a1);
			UnityEngine.Canvas a2;
			checkType(l,2,out a2);
			var ret=UnityEngine.RectTransformUtility.PixelAdjustRect(a1,a2);
					{ "trigger": "RectTransformUtility.ScreenPointToWorldPointInRectangle(Public, Static, HideBySig)","contents": "RectTransformUtility.ScreenPointToWorldPointInRectangle(Public, Static, HideBySig)"},

			UnityEngine.RectTransform a1;
			checkType(l,1,out a1);
			UnityEngine.Vector2 a2;
			checkType(l,2,out a2);
			UnityEngine.Camera a3;
			checkType(l,3,out a3);
			UnityEngine.Vector3 a4;
			var ret=UnityEngine.RectTransformUtility.ScreenPointToWorldPointInRectangle(a1,a2,a3,out a4);
					{ "trigger": "RectTransformUtility.ScreenPointToLocalPointInRectangle(Public, Static, HideBySig)","contents": "RectTransformUtility.ScreenPointToLocalPointInRectangle(Public, Static, HideBySig)"},

			UnityEngine.RectTransform a1;
			checkType(l,1,out a1);
			UnityEngine.Vector2 a2;
			checkType(l,2,out a2);
			UnityEngine.Camera a3;
			checkType(l,3,out a3);
			UnityEngine.Vector2 a4;
			var ret=UnityEngine.RectTransformUtility.ScreenPointToLocalPointInRectangle(a1,a2,a3,out a4);
					{ "trigger": "RectTransformUtility.ScreenPointToRay(Public, Static, HideBySig)","contents": "RectTransformUtility.ScreenPointToRay(Public, Static, HideBySig)"},

			UnityEngine.Camera a1;
			checkType(l,1,out a1);
			UnityEngine.Vector2 a2;
			checkType(l,2,out a2);
			var ret=UnityEngine.RectTransformUtility.ScreenPointToRay(a1,a2);
					{ "trigger": "RectTransformUtility.WorldToScreenPoint(Public, Static, HideBySig)","contents": "RectTransformUtility.WorldToScreenPoint(Public, Static, HideBySig)"},

			UnityEngine.Camera a1;
			checkType(l,1,out a1);
			UnityEngine.Vector3 a2;
			checkType(l,2,out a2);
			var ret=UnityEngine.RectTransformUtility.WorldToScreenPoint(a1,a2);
					{ "trigger": "RectTransformUtility.CalculateRelativeRectTransformBounds(Public, Static, HideBySig)","contents": "RectTransformUtility.CalculateRelativeRectTransformBounds(Public, Static, HideBySig)"},

			if(argc==1){
				UnityEngine.Transform a1;
				checkType(l,1,out a1);
				var ret=UnityEngine.RectTransformUtility.CalculateRelativeRectTransformBounds(a1);
				else if(argc==2){
					UnityEngine.Transform a1;
					checkType(l,1,out a1);
					UnityEngine.Transform a2;
					checkType(l,2,out a2);
					var ret=UnityEngine.RectTransformUtility.CalculateRelativeRectTransformBounds(a1,a2);
							{ "trigger": "RectTransformUtility.FlipLayoutOnAxis(Public, Static, HideBySig)","contents": "RectTransformUtility.FlipLayoutOnAxis(Public, Static, HideBySig)"},

					UnityEngine.RectTransform a1;
					checkType(l,1,out a1);
					System.Int32 a2;
					checkType(l,2,out a2);
					System.Boolean a3;
					checkType(l,3,out a3);
					System.Boolean a4;
					checkType(l,4,out a4);
					UnityEngine.RectTransformUtility.FlipLayoutOnAxis(a1,a2,a3,a4);
							{ "trigger": "RectTransformUtility.FlipLayoutAxes(Public, Static, HideBySig)","contents": "RectTransformUtility.FlipLayoutAxes(Public, Static, HideBySig)"},

					UnityEngine.RectTransform a1;
					checkType(l,1,out a1);
					System.Boolean a2;
					checkType(l,2,out a2);
					System.Boolean a3;
					checkType(l,3,out a3);
					UnityEngine.RectTransformUtility.FlipLayoutAxes(a1,a2,a3);
						]
				}

