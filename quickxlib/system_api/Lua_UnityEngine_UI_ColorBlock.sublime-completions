{
		"scope": "source.lua",
		"completions":
		[
			{ "trigger": "UnityEngine.UI.ColorBlock()()","contents": "UnityEngine.UI.ColorBlock()()"},

			{ "trigger": "ColorBlock.op_Equality(Public, Static, HideBySig, SpecialName)","contents": "ColorBlock.op_Equality(Public, Static, HideBySig, SpecialName)"},

	UnityEngine.UI.ColorBlock a1;
	checkValueType(l,1,out a1);
	UnityEngine.UI.ColorBlock a2;
	checkValueType(l,2,out a2);
	var ret=(a1==a2);
			{ "trigger": "ColorBlock.op_Inequality(Public, Static, HideBySig, SpecialName)","contents": "ColorBlock.op_Inequality(Public, Static, HideBySig, SpecialName)"},

	UnityEngine.UI.ColorBlock a1;
	checkValueType(l,1,out a1);
	UnityEngine.UI.ColorBlock a2;
	checkValueType(l,2,out a2);
	var ret=(a1!=a2);
	get_normalColor(IntPtr l) {
		set_normalColor(IntPtr l) {
			UnityEngine.UI.ColorBlock self;
			checkValueType(l,1,out self);
			UnityEngine.Color v;
			checkType(l,2,out v);
			self.normalColor=v;
			setBack(l,self);
			get_highlightedColor(IntPtr l) {
				set_highlightedColor(IntPtr l) {
					UnityEngine.UI.ColorBlock self;
					checkValueType(l,1,out self);
					UnityEngine.Color v;
					checkType(l,2,out v);
					self.highlightedColor=v;
					setBack(l,self);
					get_pressedColor(IntPtr l) {
						set_pressedColor(IntPtr l) {
							UnityEngine.UI.ColorBlock self;
							checkValueType(l,1,out self);
							UnityEngine.Color v;
							checkType(l,2,out v);
							self.pressedColor=v;
							setBack(l,self);
							get_disabledColor(IntPtr l) {
								set_disabledColor(IntPtr l) {
									UnityEngine.UI.ColorBlock self;
									checkValueType(l,1,out self);
									UnityEngine.Color v;
									checkType(l,2,out v);
									self.disabledColor=v;
									setBack(l,self);
									get_colorMultiplier(IntPtr l) {
										set_colorMultiplier(IntPtr l) {
											UnityEngine.UI.ColorBlock self;
											checkValueType(l,1,out self);
											float v;
											checkType(l,2,out v);
											self.colorMultiplier=v;
											setBack(l,self);
											get_fadeDuration(IntPtr l) {
												set_fadeDuration(IntPtr l) {
													UnityEngine.UI.ColorBlock self;
													checkValueType(l,1,out self);
													float v;
													checkType(l,2,out v);
													self.fadeDuration=v;
													setBack(l,self);
													get_defaultColorBlock(IntPtr l) {
															]
													}

