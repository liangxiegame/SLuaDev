{
		"scope": "source.lua",
		"completions":
		[
			{ "trigger": "UnityEngine.Animation()()","contents": "UnityEngine.Animation()()"},

			{ "trigger": "Animation:Stop(Public, HideBySig)","contents": "Animation:Stop(Public, HideBySig)"},

	if(argc==1){
		UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
		self.Stop();
		else if(argc==2){
			UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
			System.String a1;
			checkType(l,2,out a1);
			self.Stop(a1);
					{ "trigger": "Animation:Rewind(Public, HideBySig)","contents": "Animation:Rewind(Public, HideBySig)"},

			if(argc==1){
				UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
				self.Rewind();
				else if(argc==2){
					UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
					System.String a1;
					checkType(l,2,out a1);
					self.Rewind(a1);
							{ "trigger": "Animation:Sample(Public, HideBySig)","contents": "Animation:Sample(Public, HideBySig)"},

					UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
					self.Sample();
							{ "trigger": "Animation:IsPlaying(Public, HideBySig)","contents": "Animation:IsPlaying(Public, HideBySig)"},

					UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
					System.String a1;
					checkType(l,2,out a1);
					var ret=self.IsPlaying(a1);
							{ "trigger": "Animation:Play(Public, HideBySig)","contents": "Animation:Play(Public, HideBySig)"},

					if(argc==1){
						UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
						var ret=self.Play();
						else if(matchType(l,argc,2,string)){
							UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
							System.String a1;
							checkType(l,2,out a1);
							var ret=self.Play(a1);
							else if(matchType(l,argc,2,UnityEngine.PlayMode)){
								UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
								UnityEngine.PlayMode a1;
								checkEnum(l,2,out a1);
								var ret=self.Play(a1);
								else if(argc==3){
									UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
									System.String a1;
									checkType(l,2,out a1);
									UnityEngine.PlayMode a2;
									checkEnum(l,3,out a2);
									var ret=self.Play(a1,a2);
											{ "trigger": "Animation:CrossFade(Public, HideBySig)","contents": "Animation:CrossFade(Public, HideBySig)"},

									if(argc==2){
										UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
										System.String a1;
										checkType(l,2,out a1);
										self.CrossFade(a1);
										else if(argc==3){
											UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
											System.String a1;
											checkType(l,2,out a1);
											System.Single a2;
											checkType(l,3,out a2);
											self.CrossFade(a1,a2);
											else if(argc==4){
												UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
												System.String a1;
												checkType(l,2,out a1);
												System.Single a2;
												checkType(l,3,out a2);
												UnityEngine.PlayMode a3;
												checkEnum(l,4,out a3);
												self.CrossFade(a1,a2,a3);
														{ "trigger": "Animation:Blend(Public, HideBySig)","contents": "Animation:Blend(Public, HideBySig)"},

												if(argc==2){
													UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
													System.String a1;
													checkType(l,2,out a1);
													self.Blend(a1);
													else if(argc==3){
														UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
														System.String a1;
														checkType(l,2,out a1);
														System.Single a2;
														checkType(l,3,out a2);
														self.Blend(a1,a2);
														else if(argc==4){
															UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
															System.String a1;
															checkType(l,2,out a1);
															System.Single a2;
															checkType(l,3,out a2);
															System.Single a3;
															checkType(l,4,out a3);
															self.Blend(a1,a2,a3);
																	{ "trigger": "Animation:CrossFadeQueued(Public, HideBySig)","contents": "Animation:CrossFadeQueued(Public, HideBySig)"},

															if(argc==2){
																UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																System.String a1;
																checkType(l,2,out a1);
																var ret=self.CrossFadeQueued(a1);
																else if(argc==3){
																	UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																	System.String a1;
																	checkType(l,2,out a1);
																	System.Single a2;
																	checkType(l,3,out a2);
																	var ret=self.CrossFadeQueued(a1,a2);
																	else if(argc==4){
																		UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																		System.String a1;
																		checkType(l,2,out a1);
																		System.Single a2;
																		checkType(l,3,out a2);
																		UnityEngine.QueueMode a3;
																		checkEnum(l,4,out a3);
																		var ret=self.CrossFadeQueued(a1,a2,a3);
																		else if(argc==5){
																			UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																			System.String a1;
																			checkType(l,2,out a1);
																			System.Single a2;
																			checkType(l,3,out a2);
																			UnityEngine.QueueMode a3;
																			checkEnum(l,4,out a3);
																			UnityEngine.PlayMode a4;
																			checkEnum(l,5,out a4);
																			var ret=self.CrossFadeQueued(a1,a2,a3,a4);
																					{ "trigger": "Animation:PlayQueued(Public, HideBySig)","contents": "Animation:PlayQueued(Public, HideBySig)"},

																			if(argc==2){
																				UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																				System.String a1;
																				checkType(l,2,out a1);
																				var ret=self.PlayQueued(a1);
																				else if(argc==3){
																					UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																					System.String a1;
																					checkType(l,2,out a1);
																					UnityEngine.QueueMode a2;
																					checkEnum(l,3,out a2);
																					var ret=self.PlayQueued(a1,a2);
																					else if(argc==4){
																						UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																						System.String a1;
																						checkType(l,2,out a1);
																						UnityEngine.QueueMode a2;
																						checkEnum(l,3,out a2);
																						UnityEngine.PlayMode a3;
																						checkEnum(l,4,out a3);
																						var ret=self.PlayQueued(a1,a2,a3);
																								{ "trigger": "Animation:AddClip(Public, HideBySig)","contents": "Animation:AddClip(Public, HideBySig)"},

																						if(argc==3){
																							UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																							UnityEngine.AnimationClip a1;
																							checkType(l,2,out a1);
																							System.String a2;
																							checkType(l,3,out a2);
																							self.AddClip(a1,a2);
																							else if(argc==5){
																								UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																								UnityEngine.AnimationClip a1;
																								checkType(l,2,out a1);
																								System.String a2;
																								checkType(l,3,out a2);
																								System.Int32 a3;
																								checkType(l,4,out a3);
																								System.Int32 a4;
																								checkType(l,5,out a4);
																								self.AddClip(a1,a2,a3,a4);
																								else if(argc==6){
																									UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																									UnityEngine.AnimationClip a1;
																									checkType(l,2,out a1);
																									System.String a2;
																									checkType(l,3,out a2);
																									System.Int32 a3;
																									checkType(l,4,out a3);
																									System.Int32 a4;
																									checkType(l,5,out a4);
																									System.Boolean a5;
																									checkType(l,6,out a5);
																									self.AddClip(a1,a2,a3,a4,a5);
																											{ "trigger": "Animation:RemoveClip(Public, HideBySig)","contents": "Animation:RemoveClip(Public, HideBySig)"},

																									if(matchType(l,argc,2,string)){
																										UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																										System.String a1;
																										checkType(l,2,out a1);
																										self.RemoveClip(a1);
																										else if(matchType(l,argc,2,UnityEngine.AnimationClip)){
																											UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																											UnityEngine.AnimationClip a1;
																											checkType(l,2,out a1);
																											self.RemoveClip(a1);
																													{ "trigger": "Animation:GetClipCount(Public, HideBySig)","contents": "Animation:GetClipCount(Public, HideBySig)"},

																											UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																											var ret=self.GetClipCount();
																													{ "trigger": "Animation:SyncLayer(Public, HideBySig)","contents": "Animation:SyncLayer(Public, HideBySig)"},

																											UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																											System.Int32 a1;
																											checkType(l,2,out a1);
																											self.SyncLayer(a1);
																													{ "trigger": "Animation:GetClip(Public, HideBySig)","contents": "Animation:GetClip(Public, HideBySig)"},

																											UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																											System.String a1;
																											checkType(l,2,out a1);
																											var ret=self.GetClip(a1);
																											get_clip(IntPtr l) {
																												set_clip(IntPtr l) {
																													UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																													UnityEngine.AnimationClip v;
																													checkType(l,2,out v);
																													self.clip=v;
																													get_playAutomatically(IntPtr l) {
																														set_playAutomatically(IntPtr l) {
																															UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																															bool v;
																															checkType(l,2,out v);
																															self.playAutomatically=v;
																															get_wrapMode(IntPtr l) {
																																set_wrapMode(IntPtr l) {
																																	UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																																	UnityEngine.WrapMode v;
																																	checkEnum(l,2,out v);
																																	self.wrapMode=v;
																																	get_isPlaying(IntPtr l) {
																																		get_animatePhysics(IntPtr l) {
																																			set_animatePhysics(IntPtr l) {
																																				UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																																				bool v;
																																				checkType(l,2,out v);
																																				self.animatePhysics=v;
																																				get_cullingType(IntPtr l) {
																																					set_cullingType(IntPtr l) {
																																						UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																																						UnityEngine.AnimationCullingType v;
																																						checkEnum(l,2,out v);
																																						self.cullingType=v;
																																						get_localBounds(IntPtr l) {
																																							set_localBounds(IntPtr l) {
																																								UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																																								UnityEngine.Bounds v;
																																								checkValueType(l,2,out v);
																																								self.localBounds=v;
																																								UnityEngine.Animation self=(UnityEngine.Animation)checkSelf(l);
																																								string v;
																																								checkType(l,2,out v);
																																									]
																																							}

