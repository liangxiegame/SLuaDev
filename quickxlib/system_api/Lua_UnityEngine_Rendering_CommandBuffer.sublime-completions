{
		"scope": "source.lua",
		"completions":
		[
			{ "trigger": "UnityEngine.Rendering.CommandBuffer()()","contents": "UnityEngine.Rendering.CommandBuffer()()"},

			{ "trigger": "CommandBuffer:Dispose(Public, Final, Virtual, HideBySig, VtableLayoutMask)","contents": "CommandBuffer:Dispose(Public, Final, Virtual, HideBySig, VtableLayoutMask)"},

	UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
	self.Dispose();
			{ "trigger": "CommandBuffer:Release(Public, HideBySig)","contents": "CommandBuffer:Release(Public, HideBySig)"},

	UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
	self.Release();
			{ "trigger": "CommandBuffer:Clear(Public, HideBySig)","contents": "CommandBuffer:Clear(Public, HideBySig)"},

	UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
	self.Clear();
			{ "trigger": "CommandBuffer:DrawMesh(Public, HideBySig)","contents": "CommandBuffer:DrawMesh(Public, HideBySig)"},

	if(argc==4){
		UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
		UnityEngine.Mesh a1;
		checkType(l,2,out a1);
		UnityEngine.Matrix4x4 a2;
		checkValueType(l,3,out a2);
		UnityEngine.Material a3;
		checkType(l,4,out a3);
		self.DrawMesh(a1,a2,a3);
		else if(argc==5){
			UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
			UnityEngine.Mesh a1;
			checkType(l,2,out a1);
			UnityEngine.Matrix4x4 a2;
			checkValueType(l,3,out a2);
			UnityEngine.Material a3;
			checkType(l,4,out a3);
			System.Int32 a4;
			checkType(l,5,out a4);
			self.DrawMesh(a1,a2,a3,a4);
			else if(argc==6){
				UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
				UnityEngine.Mesh a1;
				checkType(l,2,out a1);
				UnityEngine.Matrix4x4 a2;
				checkValueType(l,3,out a2);
				UnityEngine.Material a3;
				checkType(l,4,out a3);
				System.Int32 a4;
				checkType(l,5,out a4);
				System.Int32 a5;
				checkType(l,6,out a5);
				self.DrawMesh(a1,a2,a3,a4,a5);
				else if(argc==7){
					UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
					UnityEngine.Mesh a1;
					checkType(l,2,out a1);
					UnityEngine.Matrix4x4 a2;
					checkValueType(l,3,out a2);
					UnityEngine.Material a3;
					checkType(l,4,out a3);
					System.Int32 a4;
					checkType(l,5,out a4);
					System.Int32 a5;
					checkType(l,6,out a5);
					UnityEngine.MaterialPropertyBlock a6;
					checkType(l,7,out a6);
					self.DrawMesh(a1,a2,a3,a4,a5,a6);
							{ "trigger": "CommandBuffer:DrawRenderer(Public, HideBySig)","contents": "CommandBuffer:DrawRenderer(Public, HideBySig)"},

					if(argc==3){
						UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
						UnityEngine.Renderer a1;
						checkType(l,2,out a1);
						UnityEngine.Material a2;
						checkType(l,3,out a2);
						self.DrawRenderer(a1,a2);
						else if(argc==4){
							UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
							UnityEngine.Renderer a1;
							checkType(l,2,out a1);
							UnityEngine.Material a2;
							checkType(l,3,out a2);
							System.Int32 a3;
							checkType(l,4,out a3);
							self.DrawRenderer(a1,a2,a3);
							else if(argc==5){
								UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
								UnityEngine.Renderer a1;
								checkType(l,2,out a1);
								UnityEngine.Material a2;
								checkType(l,3,out a2);
								System.Int32 a3;
								checkType(l,4,out a3);
								System.Int32 a4;
								checkType(l,5,out a4);
								self.DrawRenderer(a1,a2,a3,a4);
										{ "trigger": "CommandBuffer:DrawProcedural(Public, HideBySig)","contents": "CommandBuffer:DrawProcedural(Public, HideBySig)"},

								if(argc==6){
									UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
									UnityEngine.Matrix4x4 a1;
									checkValueType(l,2,out a1);
									UnityEngine.Material a2;
									checkType(l,3,out a2);
									System.Int32 a3;
									checkType(l,4,out a3);
									UnityEngine.MeshTopology a4;
									checkEnum(l,5,out a4);
									System.Int32 a5;
									checkType(l,6,out a5);
									self.DrawProcedural(a1,a2,a3,a4,a5);
									else if(argc==7){
										UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
										UnityEngine.Matrix4x4 a1;
										checkValueType(l,2,out a1);
										UnityEngine.Material a2;
										checkType(l,3,out a2);
										System.Int32 a3;
										checkType(l,4,out a3);
										UnityEngine.MeshTopology a4;
										checkEnum(l,5,out a4);
										System.Int32 a5;
										checkType(l,6,out a5);
										System.Int32 a6;
										checkType(l,7,out a6);
										self.DrawProcedural(a1,a2,a3,a4,a5,a6);
										else if(argc==8){
											UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
											UnityEngine.Matrix4x4 a1;
											checkValueType(l,2,out a1);
											UnityEngine.Material a2;
											checkType(l,3,out a2);
											System.Int32 a3;
											checkType(l,4,out a3);
											UnityEngine.MeshTopology a4;
											checkEnum(l,5,out a4);
											System.Int32 a5;
											checkType(l,6,out a5);
											System.Int32 a6;
											checkType(l,7,out a6);
											UnityEngine.MaterialPropertyBlock a7;
											checkType(l,8,out a7);
											self.DrawProcedural(a1,a2,a3,a4,a5,a6,a7);
													{ "trigger": "CommandBuffer:DrawProceduralIndirect(Public, HideBySig)","contents": "CommandBuffer:DrawProceduralIndirect(Public, HideBySig)"},

											if(argc==6){
												UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
												UnityEngine.Matrix4x4 a1;
												checkValueType(l,2,out a1);
												UnityEngine.Material a2;
												checkType(l,3,out a2);
												System.Int32 a3;
												checkType(l,4,out a3);
												UnityEngine.MeshTopology a4;
												checkEnum(l,5,out a4);
												UnityEngine.ComputeBuffer a5;
												checkType(l,6,out a5);
												self.DrawProceduralIndirect(a1,a2,a3,a4,a5);
												else if(argc==7){
													UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
													UnityEngine.Matrix4x4 a1;
													checkValueType(l,2,out a1);
													UnityEngine.Material a2;
													checkType(l,3,out a2);
													System.Int32 a3;
													checkType(l,4,out a3);
													UnityEngine.MeshTopology a4;
													checkEnum(l,5,out a4);
													UnityEngine.ComputeBuffer a5;
													checkType(l,6,out a5);
													System.Int32 a6;
													checkType(l,7,out a6);
													self.DrawProceduralIndirect(a1,a2,a3,a4,a5,a6);
													else if(argc==8){
														UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
														UnityEngine.Matrix4x4 a1;
														checkValueType(l,2,out a1);
														UnityEngine.Material a2;
														checkType(l,3,out a2);
														System.Int32 a3;
														checkType(l,4,out a3);
														UnityEngine.MeshTopology a4;
														checkEnum(l,5,out a4);
														UnityEngine.ComputeBuffer a5;
														checkType(l,6,out a5);
														System.Int32 a6;
														checkType(l,7,out a6);
														UnityEngine.MaterialPropertyBlock a7;
														checkType(l,8,out a7);
														self.DrawProceduralIndirect(a1,a2,a3,a4,a5,a6,a7);
																{ "trigger": "CommandBuffer:SetRenderTarget(Public, HideBySig)","contents": "CommandBuffer:SetRenderTarget(Public, HideBySig)"},

														if(argc==2){
															UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
															UnityEngine.Rendering.RenderTargetIdentifier a1;
															checkValueType(l,2,out a1);
															self.SetRenderTarget(a1);
															else if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier)){
																UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																UnityEngine.Rendering.RenderTargetIdentifier a1;
																checkValueType(l,2,out a1);
																UnityEngine.Rendering.RenderTargetIdentifier a2;
																checkValueType(l,3,out a2);
																self.SetRenderTarget(a1,a2);
																else if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier[],UnityEngine.Rendering.RenderTargetIdentifier)){
																	UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																	UnityEngine.Rendering.RenderTargetIdentifier[] a1;
																	checkArray(l,2,out a1);
																	UnityEngine.Rendering.RenderTargetIdentifier a2;
																	checkValueType(l,3,out a2);
																	self.SetRenderTarget(a1,a2);
																	else if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier,int)){
																		UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																		UnityEngine.Rendering.RenderTargetIdentifier a1;
																		checkValueType(l,2,out a1);
																		System.Int32 a2;
																		checkType(l,3,out a2);
																		self.SetRenderTarget(a1,a2);
																		else if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier,int)){
																			UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																			UnityEngine.Rendering.RenderTargetIdentifier a1;
																			checkValueType(l,2,out a1);
																			UnityEngine.Rendering.RenderTargetIdentifier a2;
																			checkValueType(l,3,out a2);
																			System.Int32 a3;
																			checkType(l,4,out a3);
																			self.SetRenderTarget(a1,a2,a3);
																			else if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier,int,UnityEngine.CubemapFace)){
																				UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																				UnityEngine.Rendering.RenderTargetIdentifier a1;
																				checkValueType(l,2,out a1);
																				System.Int32 a2;
																				checkType(l,3,out a2);
																				UnityEngine.CubemapFace a3;
																				checkEnum(l,4,out a3);
																				self.SetRenderTarget(a1,a2,a3);
																				else if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier,int,UnityEngine.CubemapFace,int)){
																					UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																					UnityEngine.Rendering.RenderTargetIdentifier a1;
																					checkValueType(l,2,out a1);
																					System.Int32 a2;
																					checkType(l,3,out a2);
																					UnityEngine.CubemapFace a3;
																					checkEnum(l,4,out a3);
																					System.Int32 a4;
																					checkType(l,5,out a4);
																					self.SetRenderTarget(a1,a2,a3,a4);
																					else if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier,int,UnityEngine.CubemapFace)){
																						UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																						UnityEngine.Rendering.RenderTargetIdentifier a1;
																						checkValueType(l,2,out a1);
																						UnityEngine.Rendering.RenderTargetIdentifier a2;
																						checkValueType(l,3,out a2);
																						System.Int32 a3;
																						checkType(l,4,out a3);
																						UnityEngine.CubemapFace a4;
																						checkEnum(l,5,out a4);
																						self.SetRenderTarget(a1,a2,a3,a4);
																						else if(argc==6){
																							UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																							UnityEngine.Rendering.RenderTargetIdentifier a1;
																							checkValueType(l,2,out a1);
																							UnityEngine.Rendering.RenderTargetIdentifier a2;
																							checkValueType(l,3,out a2);
																							System.Int32 a3;
																							checkType(l,4,out a3);
																							UnityEngine.CubemapFace a4;
																							checkEnum(l,5,out a4);
																							System.Int32 a5;
																							checkType(l,6,out a5);
																							self.SetRenderTarget(a1,a2,a3,a4,a5);
																									{ "trigger": "CommandBuffer:Blit(Public, HideBySig)","contents": "CommandBuffer:Blit(Public, HideBySig)"},

																							if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier)){
																								UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																								UnityEngine.Rendering.RenderTargetIdentifier a1;
																								checkValueType(l,2,out a1);
																								UnityEngine.Rendering.RenderTargetIdentifier a2;
																								checkValueType(l,3,out a2);
																								self.Blit(a1,a2);
																								else if(matchType(l,argc,2,UnityEngine.Texture,UnityEngine.Rendering.RenderTargetIdentifier)){
																									UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																									UnityEngine.Texture a1;
																									checkType(l,2,out a1);
																									UnityEngine.Rendering.RenderTargetIdentifier a2;
																									checkValueType(l,3,out a2);
																									self.Blit(a1,a2);
																									else if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Material)){
																										UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																										UnityEngine.Rendering.RenderTargetIdentifier a1;
																										checkValueType(l,2,out a1);
																										UnityEngine.Rendering.RenderTargetIdentifier a2;
																										checkValueType(l,3,out a2);
																										UnityEngine.Material a3;
																										checkType(l,4,out a3);
																										self.Blit(a1,a2,a3);
																										else if(matchType(l,argc,2,UnityEngine.Texture,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Material)){
																											UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																											UnityEngine.Texture a1;
																											checkType(l,2,out a1);
																											UnityEngine.Rendering.RenderTargetIdentifier a2;
																											checkValueType(l,3,out a2);
																											UnityEngine.Material a3;
																											checkType(l,4,out a3);
																											self.Blit(a1,a2,a3);
																											else if(matchType(l,argc,2,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Material,int)){
																												UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																												UnityEngine.Rendering.RenderTargetIdentifier a1;
																												checkValueType(l,2,out a1);
																												UnityEngine.Rendering.RenderTargetIdentifier a2;
																												checkValueType(l,3,out a2);
																												UnityEngine.Material a3;
																												checkType(l,4,out a3);
																												System.Int32 a4;
																												checkType(l,5,out a4);
																												self.Blit(a1,a2,a3,a4);
																												else if(matchType(l,argc,2,UnityEngine.Texture,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Material,int)){
																													UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																													UnityEngine.Texture a1;
																													checkType(l,2,out a1);
																													UnityEngine.Rendering.RenderTargetIdentifier a2;
																													checkValueType(l,3,out a2);
																													UnityEngine.Material a3;
																													checkType(l,4,out a3);
																													System.Int32 a4;
																													checkType(l,5,out a4);
																													self.Blit(a1,a2,a3,a4);
																															{ "trigger": "CommandBuffer:GetTemporaryRT(Public, HideBySig)","contents": "CommandBuffer:GetTemporaryRT(Public, HideBySig)"},

																													if(argc==4){
																														UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																														System.Int32 a1;
																														checkType(l,2,out a1);
																														System.Int32 a2;
																														checkType(l,3,out a2);
																														System.Int32 a3;
																														checkType(l,4,out a3);
																														self.GetTemporaryRT(a1,a2,a3);
																														else if(argc==5){
																															UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																															System.Int32 a1;
																															checkType(l,2,out a1);
																															System.Int32 a2;
																															checkType(l,3,out a2);
																															System.Int32 a3;
																															checkType(l,4,out a3);
																															System.Int32 a4;
																															checkType(l,5,out a4);
																															self.GetTemporaryRT(a1,a2,a3,a4);
																															else if(argc==6){
																																UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																System.Int32 a1;
																																checkType(l,2,out a1);
																																System.Int32 a2;
																																checkType(l,3,out a2);
																																System.Int32 a3;
																																checkType(l,4,out a3);
																																System.Int32 a4;
																																checkType(l,5,out a4);
																																UnityEngine.FilterMode a5;
																																checkEnum(l,6,out a5);
																																self.GetTemporaryRT(a1,a2,a3,a4,a5);
																																else if(argc==7){
																																	UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																	System.Int32 a1;
																																	checkType(l,2,out a1);
																																	System.Int32 a2;
																																	checkType(l,3,out a2);
																																	System.Int32 a3;
																																	checkType(l,4,out a3);
																																	System.Int32 a4;
																																	checkType(l,5,out a4);
																																	UnityEngine.FilterMode a5;
																																	checkEnum(l,6,out a5);
																																	UnityEngine.RenderTextureFormat a6;
																																	checkEnum(l,7,out a6);
																																	self.GetTemporaryRT(a1,a2,a3,a4,a5,a6);
																																	else if(argc==8){
																																		UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																		System.Int32 a1;
																																		checkType(l,2,out a1);
																																		System.Int32 a2;
																																		checkType(l,3,out a2);
																																		System.Int32 a3;
																																		checkType(l,4,out a3);
																																		System.Int32 a4;
																																		checkType(l,5,out a4);
																																		UnityEngine.FilterMode a5;
																																		checkEnum(l,6,out a5);
																																		UnityEngine.RenderTextureFormat a6;
																																		checkEnum(l,7,out a6);
																																		UnityEngine.RenderTextureReadWrite a7;
																																		checkEnum(l,8,out a7);
																																		self.GetTemporaryRT(a1,a2,a3,a4,a5,a6,a7);
																																		else if(argc==9){
																																			UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																			System.Int32 a1;
																																			checkType(l,2,out a1);
																																			System.Int32 a2;
																																			checkType(l,3,out a2);
																																			System.Int32 a3;
																																			checkType(l,4,out a3);
																																			System.Int32 a4;
																																			checkType(l,5,out a4);
																																			UnityEngine.FilterMode a5;
																																			checkEnum(l,6,out a5);
																																			UnityEngine.RenderTextureFormat a6;
																																			checkEnum(l,7,out a6);
																																			UnityEngine.RenderTextureReadWrite a7;
																																			checkEnum(l,8,out a7);
																																			System.Int32 a8;
																																			checkType(l,9,out a8);
																																			self.GetTemporaryRT(a1,a2,a3,a4,a5,a6,a7,a8);
																																					{ "trigger": "CommandBuffer:ReleaseTemporaryRT(Public, HideBySig)","contents": "CommandBuffer:ReleaseTemporaryRT(Public, HideBySig)"},

																																			UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																			System.Int32 a1;
																																			checkType(l,2,out a1);
																																			self.ReleaseTemporaryRT(a1);
																																					{ "trigger": "CommandBuffer:ClearRenderTarget(Public, HideBySig)","contents": "CommandBuffer:ClearRenderTarget(Public, HideBySig)"},

																																			if(argc==4){
																																				UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																				System.Boolean a1;
																																				checkType(l,2,out a1);
																																				System.Boolean a2;
																																				checkType(l,3,out a2);
																																				UnityEngine.Color a3;
																																				checkType(l,4,out a3);
																																				self.ClearRenderTarget(a1,a2,a3);
																																				else if(argc==5){
																																					UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																					System.Boolean a1;
																																					checkType(l,2,out a1);
																																					System.Boolean a2;
																																					checkType(l,3,out a2);
																																					UnityEngine.Color a3;
																																					checkType(l,4,out a3);
																																					System.Single a4;
																																					checkType(l,5,out a4);
																																					self.ClearRenderTarget(a1,a2,a3,a4);
																																							{ "trigger": "CommandBuffer:SetGlobalFloat(Public, HideBySig)","contents": "CommandBuffer:SetGlobalFloat(Public, HideBySig)"},

																																					if(matchType(l,argc,2,int,float)){
																																						UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																						System.Int32 a1;
																																						checkType(l,2,out a1);
																																						System.Single a2;
																																						checkType(l,3,out a2);
																																						self.SetGlobalFloat(a1,a2);
																																						else if(matchType(l,argc,2,string,float)){
																																							UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																							System.String a1;
																																							checkType(l,2,out a1);
																																							System.Single a2;
																																							checkType(l,3,out a2);
																																							self.SetGlobalFloat(a1,a2);
																																									{ "trigger": "CommandBuffer:SetGlobalVector(Public, HideBySig)","contents": "CommandBuffer:SetGlobalVector(Public, HideBySig)"},

																																							if(matchType(l,argc,2,int,UnityEngine.Vector4)){
																																								UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																								System.Int32 a1;
																																								checkType(l,2,out a1);
																																								UnityEngine.Vector4 a2;
																																								checkType(l,3,out a2);
																																								self.SetGlobalVector(a1,a2);
																																								else if(matchType(l,argc,2,string,UnityEngine.Vector4)){
																																									UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																									System.String a1;
																																									checkType(l,2,out a1);
																																									UnityEngine.Vector4 a2;
																																									checkType(l,3,out a2);
																																									self.SetGlobalVector(a1,a2);
																																											{ "trigger": "CommandBuffer:SetGlobalColor(Public, HideBySig)","contents": "CommandBuffer:SetGlobalColor(Public, HideBySig)"},

																																									if(matchType(l,argc,2,int,UnityEngine.Color)){
																																										UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																										System.Int32 a1;
																																										checkType(l,2,out a1);
																																										UnityEngine.Color a2;
																																										checkType(l,3,out a2);
																																										self.SetGlobalColor(a1,a2);
																																										else if(matchType(l,argc,2,string,UnityEngine.Color)){
																																											UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																											System.String a1;
																																											checkType(l,2,out a1);
																																											UnityEngine.Color a2;
																																											checkType(l,3,out a2);
																																											self.SetGlobalColor(a1,a2);
																																													{ "trigger": "CommandBuffer:SetGlobalMatrix(Public, HideBySig)","contents": "CommandBuffer:SetGlobalMatrix(Public, HideBySig)"},

																																											if(matchType(l,argc,2,int,UnityEngine.Matrix4x4)){
																																												UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																												System.Int32 a1;
																																												checkType(l,2,out a1);
																																												UnityEngine.Matrix4x4 a2;
																																												checkValueType(l,3,out a2);
																																												self.SetGlobalMatrix(a1,a2);
																																												else if(matchType(l,argc,2,string,UnityEngine.Matrix4x4)){
																																													UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																													System.String a1;
																																													checkType(l,2,out a1);
																																													UnityEngine.Matrix4x4 a2;
																																													checkValueType(l,3,out a2);
																																													self.SetGlobalMatrix(a1,a2);
																																															{ "trigger": "CommandBuffer:SetGlobalFloatArray(Public, HideBySig)","contents": "CommandBuffer:SetGlobalFloatArray(Public, HideBySig)"},

																																													if(matchType(l,argc,2,int,System.Single[])){
																																														UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																														System.Int32 a1;
																																														checkType(l,2,out a1);
																																														System.Single[] a2;
																																														checkArray(l,3,out a2);
																																														self.SetGlobalFloatArray(a1,a2);
																																														else if(matchType(l,argc,2,string,System.Single[])){
																																															UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																															System.String a1;
																																															checkType(l,2,out a1);
																																															System.Single[] a2;
																																															checkArray(l,3,out a2);
																																															self.SetGlobalFloatArray(a1,a2);
																																																	{ "trigger": "CommandBuffer:SetGlobalVectorArray(Public, HideBySig)","contents": "CommandBuffer:SetGlobalVectorArray(Public, HideBySig)"},

																																															if(matchType(l,argc,2,int,UnityEngine.Vector4[])){
																																																UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																																System.Int32 a1;
																																																checkType(l,2,out a1);
																																																UnityEngine.Vector4[] a2;
																																																checkArray(l,3,out a2);
																																																self.SetGlobalVectorArray(a1,a2);
																																																else if(matchType(l,argc,2,string,UnityEngine.Vector4[])){
																																																	UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																																	System.String a1;
																																																	checkType(l,2,out a1);
																																																	UnityEngine.Vector4[] a2;
																																																	checkArray(l,3,out a2);
																																																	self.SetGlobalVectorArray(a1,a2);
																																																			{ "trigger": "CommandBuffer:SetGlobalMatrixArray(Public, HideBySig)","contents": "CommandBuffer:SetGlobalMatrixArray(Public, HideBySig)"},

																																																	if(matchType(l,argc,2,int,UnityEngine.Matrix4x4[])){
																																																		UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																																		System.Int32 a1;
																																																		checkType(l,2,out a1);
																																																		UnityEngine.Matrix4x4[] a2;
																																																		checkArray(l,3,out a2);
																																																		self.SetGlobalMatrixArray(a1,a2);
																																																		else if(matchType(l,argc,2,string,UnityEngine.Matrix4x4[])){
																																																			UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																																			System.String a1;
																																																			checkType(l,2,out a1);
																																																			UnityEngine.Matrix4x4[] a2;
																																																			checkArray(l,3,out a2);
																																																			self.SetGlobalMatrixArray(a1,a2);
																																																					{ "trigger": "CommandBuffer:SetGlobalTexture(Public, HideBySig)","contents": "CommandBuffer:SetGlobalTexture(Public, HideBySig)"},

																																																			if(matchType(l,argc,2,int,UnityEngine.Rendering.RenderTargetIdentifier)){
																																																				UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																																				System.Int32 a1;
																																																				checkType(l,2,out a1);
																																																				UnityEngine.Rendering.RenderTargetIdentifier a2;
																																																				checkValueType(l,3,out a2);
																																																				self.SetGlobalTexture(a1,a2);
																																																				else if(matchType(l,argc,2,string,UnityEngine.Rendering.RenderTargetIdentifier)){
																																																					UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																																					System.String a1;
																																																					checkType(l,2,out a1);
																																																					UnityEngine.Rendering.RenderTargetIdentifier a2;
																																																					checkValueType(l,3,out a2);
																																																					self.SetGlobalTexture(a1,a2);
																																																							{ "trigger": "CommandBuffer:SetShadowSamplingMode(Public, HideBySig)","contents": "CommandBuffer:SetShadowSamplingMode(Public, HideBySig)"},

																																																					UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																																					UnityEngine.Rendering.RenderTargetIdentifier a1;
																																																					checkValueType(l,2,out a1);
																																																					UnityEngine.Rendering.ShadowSamplingMode a2;
																																																					checkEnum(l,3,out a2);
																																																					self.SetShadowSamplingMode(a1,a2);
																																																							{ "trigger": "CommandBuffer:IssuePluginEvent(Public, HideBySig)","contents": "CommandBuffer:IssuePluginEvent(Public, HideBySig)"},

																																																					UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																																					System.IntPtr a1;
																																																					checkType(l,2,out a1);
																																																					System.Int32 a2;
																																																					checkType(l,3,out a2);
																																																					self.IssuePluginEvent(a1,a2);
																																																					get_name(IntPtr l) {
																																																						set_name(IntPtr l) {
																																																							UnityEngine.Rendering.CommandBuffer self=(UnityEngine.Rendering.CommandBuffer)checkSelf(l);
																																																							string v;
																																																							checkType(l,2,out v);
																																																							self.name=v;
																																																							get_sizeInBytes(IntPtr l) {
																																																									]
																																																							}

