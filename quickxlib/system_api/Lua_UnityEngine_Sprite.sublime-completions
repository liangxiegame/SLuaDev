{
		"scope": "source.lua",
		"completions":
		[
			{ "trigger": "UnityEngine.Sprite()()","contents": "UnityEngine.Sprite()()"},

			{ "trigger": "Sprite:OverrideGeometry(Public, HideBySig)","contents": "Sprite:OverrideGeometry(Public, HideBySig)"},

	UnityEngine.Sprite self=(UnityEngine.Sprite)checkSelf(l);
	UnityEngine.Vector2[] a1;
	checkArray(l,2,out a1);
	System.UInt16[] a2;
	checkArray(l,3,out a2);
	self.OverrideGeometry(a1,a2);
			{ "trigger": "Sprite.Create(Public, Static, HideBySig)","contents": "Sprite.Create(Public, Static, HideBySig)"},

	if(argc==3){
		UnityEngine.Texture2D a1;
		checkType(l,1,out a1);
		UnityEngine.Rect a2;
		checkValueType(l,2,out a2);
		UnityEngine.Vector2 a3;
		checkType(l,3,out a3);
		var ret=UnityEngine.Sprite.Create(a1,a2,a3);
		else if(argc==4){
			UnityEngine.Texture2D a1;
			checkType(l,1,out a1);
			UnityEngine.Rect a2;
			checkValueType(l,2,out a2);
			UnityEngine.Vector2 a3;
			checkType(l,3,out a3);
			System.Single a4;
			checkType(l,4,out a4);
			var ret=UnityEngine.Sprite.Create(a1,a2,a3,a4);
			else if(argc==5){
				UnityEngine.Texture2D a1;
				checkType(l,1,out a1);
				UnityEngine.Rect a2;
				checkValueType(l,2,out a2);
				UnityEngine.Vector2 a3;
				checkType(l,3,out a3);
				System.Single a4;
				checkType(l,4,out a4);
				System.UInt32 a5;
				checkType(l,5,out a5);
				var ret=UnityEngine.Sprite.Create(a1,a2,a3,a4,a5);
				else if(argc==6){
					UnityEngine.Texture2D a1;
					checkType(l,1,out a1);
					UnityEngine.Rect a2;
					checkValueType(l,2,out a2);
					UnityEngine.Vector2 a3;
					checkType(l,3,out a3);
					System.Single a4;
					checkType(l,4,out a4);
					System.UInt32 a5;
					checkType(l,5,out a5);
					UnityEngine.SpriteMeshType a6;
					checkEnum(l,6,out a6);
					var ret=UnityEngine.Sprite.Create(a1,a2,a3,a4,a5,a6);
					else if(argc==7){
						UnityEngine.Texture2D a1;
						checkType(l,1,out a1);
						UnityEngine.Rect a2;
						checkValueType(l,2,out a2);
						UnityEngine.Vector2 a3;
						checkType(l,3,out a3);
						System.Single a4;
						checkType(l,4,out a4);
						System.UInt32 a5;
						checkType(l,5,out a5);
						UnityEngine.SpriteMeshType a6;
						checkEnum(l,6,out a6);
						UnityEngine.Vector4 a7;
						checkType(l,7,out a7);
						var ret=UnityEngine.Sprite.Create(a1,a2,a3,a4,a5,a6,a7);
						get_bounds(IntPtr l) {
							get_rect(IntPtr l) {
								get_pixelsPerUnit(IntPtr l) {
									get_texture(IntPtr l) {
										get_associatedAlphaSplitTexture(IntPtr l) {
											get_textureRect(IntPtr l) {
												get_textureRectOffset(IntPtr l) {
													get_packed(IntPtr l) {
														get_packingMode(IntPtr l) {
															get_packingRotation(IntPtr l) {
																get_pivot(IntPtr l) {
																	get_border(IntPtr l) {
																		get_vertices(IntPtr l) {
																			get_triangles(IntPtr l) {
																				get_uv(IntPtr l) {
																						]
																				}

