{
		"scope": "source.lua",
		"completions":
		[
			{ "trigger": "UnityEngine.BoneWeight()()","contents": "UnityEngine.BoneWeight()()"},

			{ "trigger": "BoneWeight.op_Equality(Public, Static, HideBySig, SpecialName)","contents": "BoneWeight.op_Equality(Public, Static, HideBySig, SpecialName)"},

	UnityEngine.BoneWeight a1;
	checkValueType(l,1,out a1);
	UnityEngine.BoneWeight a2;
	checkValueType(l,2,out a2);
	var ret=(a1==a2);
			{ "trigger": "BoneWeight.op_Inequality(Public, Static, HideBySig, SpecialName)","contents": "BoneWeight.op_Inequality(Public, Static, HideBySig, SpecialName)"},

	UnityEngine.BoneWeight a1;
	checkValueType(l,1,out a1);
	UnityEngine.BoneWeight a2;
	checkValueType(l,2,out a2);
	var ret=(a1!=a2);
	get_weight0(IntPtr l) {
		set_weight0(IntPtr l) {
			UnityEngine.BoneWeight self;
			checkValueType(l,1,out self);
			float v;
			checkType(l,2,out v);
			self.weight0=v;
			setBack(l,self);
			get_weight1(IntPtr l) {
				set_weight1(IntPtr l) {
					UnityEngine.BoneWeight self;
					checkValueType(l,1,out self);
					float v;
					checkType(l,2,out v);
					self.weight1=v;
					setBack(l,self);
					get_weight2(IntPtr l) {
						set_weight2(IntPtr l) {
							UnityEngine.BoneWeight self;
							checkValueType(l,1,out self);
							float v;
							checkType(l,2,out v);
							self.weight2=v;
							setBack(l,self);
							get_weight3(IntPtr l) {
								set_weight3(IntPtr l) {
									UnityEngine.BoneWeight self;
									checkValueType(l,1,out self);
									float v;
									checkType(l,2,out v);
									self.weight3=v;
									setBack(l,self);
									get_boneIndex0(IntPtr l) {
										set_boneIndex0(IntPtr l) {
											UnityEngine.BoneWeight self;
											checkValueType(l,1,out self);
											int v;
											checkType(l,2,out v);
											self.boneIndex0=v;
											setBack(l,self);
											get_boneIndex1(IntPtr l) {
												set_boneIndex1(IntPtr l) {
													UnityEngine.BoneWeight self;
													checkValueType(l,1,out self);
													int v;
													checkType(l,2,out v);
													self.boneIndex1=v;
													setBack(l,self);
													get_boneIndex2(IntPtr l) {
														set_boneIndex2(IntPtr l) {
															UnityEngine.BoneWeight self;
															checkValueType(l,1,out self);
															int v;
															checkType(l,2,out v);
															self.boneIndex2=v;
															setBack(l,self);
															get_boneIndex3(IntPtr l) {
																set_boneIndex3(IntPtr l) {
																	UnityEngine.BoneWeight self;
																	checkValueType(l,1,out self);
																	int v;
																	checkType(l,2,out v);
																	self.boneIndex3=v;
																	setBack(l,self);
																		]
																}

